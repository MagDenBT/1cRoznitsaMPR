
#Область ПрограммныйИнтерфейс

// Возвращает текущую дату, приведенную к часовому поясу сеанса.
// Предназначена для использования вместо функции ТекущаяДата().
//
// Возвращаемое значение:
//  Результат - текущая дата.
//
Функция ДатаСеанса() Экспорт
	
	Возврат ОбщегоНазначенияКлиент.ДатаСеанса();
	
КонецФункции

// Процедура отправляет электронное сообщение на электронную почта и абонентский номер.
//
// Параметры:
// ПараметрыЧека - Структура - Параметры чека ККТ, где:
//  *ПозицииЧека - Массив из См. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыФискальнойСтрокиЧека - .
// ТекстСообщения - Строка - Текст сообщения покупателю.
// ПокупательEmail - Строка - Электронную почта покупателя.
// ПокупательНомер - Строка - Абонентский номер покупателя.
//
Процедура НачатьОтправкуЭлектронногоЧека(ПараметрыЧека, ТекстСообщения, ПокупательEmail, ПокупательНомер) Экспорт
	
	РассылкаЭлектронныхЧековКлиент.НачатьОтправкуЭлектронногоЧека(ПараметрыЧека, ТекстСообщения, ПокупательEmail, ПокупательНомер);
	
КонецПроцедуры

// Начинает рассылку или ставит задачу на рассылку нефискальных документов.
// Которые заданы в шаблоне чека.
//
// Параметры:
// Параметры - Массив из См. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыФискальнойСтрокиЧека, где:
// *ПозицииЧека - Массив из Структура. 
//
Процедура НачатьРассылкуНефискальныхДокументов(Параметры) Экспорт
	
	МаркетинговыеАкцииВызовСервера.НачатьРассылкуНефискальныхДокументов(Параметры.ВходныеПараметры);
	
КонецПроцедуры

#Область ОборудованиеККТ

// Переопределяет доступное ККТ для фискализации чека
// Параметры:
//  РеквизитыЧека - Структура - реквизиты фискального чека
//  СписокУстройств - Массив - список доступных ККТ для фискализации
//  ИдентификаторУстройстваККТ - СправочникСсылка.ПодключаемоеОборудование - выбранное ККТ для фискализации
//  СтандартнаяОбработка - Булево - выполнение стандартной обработки
//
Процедура ДоступноеККТДляФискализации(РеквизитыЧека, СписокУстройств, ИдентификаторУстройстваККТ, СтандартнаяОбработка = Истина) Экспорт
	
	СтандартнаяОбработка = Ложь;
	ПодключаемаяККМ = Неопределено;
	
	Если ЗначениеЗаполнено(РеквизитыЧека.КассаККМ) Тогда
		ПодключаемаяККМ = ОбщегоНазначенияРТВызовСервера.ЗначениеРеквизитаОбъекта(РеквизитыЧека.КассаККМ, "ПодключаемоеОборудование");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПодключаемаяККМ) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Устройство Из СписокУстройств Цикл
		Если Устройство.Ссылка = ПодключаемаяККМ Тогда
			ИдентификаторУстройстваККТ = ПодключаемаяККМ;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Событие при открытии смены на ККТ 
// Параметры:
//  ИдентификаторУстройстваККТ - СправочникСсылка.ПодключаемоеОборудование - выбранное ККТ
//  ПараметрыРегистрации - Структура - Параметры регистрации ФН
//
Процедура ПриОткрытииСменыНаККТ(ИдентификаторУстройстваККТ, ПараметрыРегистрации) Экспорт

КонецПроцедуры

// Переопределяет печать слип чека алкогольной продукции 
// Параметры:
//  ПечатьСлипЧека - Булево - Печатается слип чек алкогольной продукции 
//  СтандартнаяОбработка - Булево - выполнение стандартной обработки
//
Процедура ПечатьСлипЧекаАлкогольнойПродукции(ПечатьСлипЧека, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	ПечатьСлипЧека = НЕ ИнтеграцияЕГАИСРТКлиентПовтИсп.ИспользоватьЕдиныйШтриховойКодДляККТИЕГАИС();
	
КонецПроцедуры

// Переопределяет печать слип чека эквайринговой операции. 
//  ПечатьСлипЧека - Булево - Определяет будет ли распечатан слип-чек, по умолчанию Истина.  
//  ПолныйСлипЧек  - Булево - Определяет какой слип-чек будет распечатан полный или короткий, по умолчанию Истина. 
//  СтандартнаяОбработка - Булево - выполнение стандартной обработки.
//
Процедура ПечатьСлипЧекаЭквайринговойОперации(ПечатьСлипЧека, ПолныйСлипЧек, СтандартнаяОбработка) Экспорт

	ПодключаемоеОборудованиеРТВызовСервера.ПечатьСлипЧекаЭквайринговойОперации(ПечатьСлипЧека, ПолныйСлипЧек, СтандартнаяОбработка);
	
КонецПроцедуры

// Переопределяет вывод QR-кода чека на дисплей покупателя после фискализации. 
// Параметры:
//  ВыводQRКодаЧека - Булево - Вывод QR-кода чека на дисплей покупателя 
//  СтандартнаяОбработка - Булево - выполнение стандартной обработки
//
Процедура ВыводQRКодаЧекаНаДисплейПокупателяПослеФискализации(ВыводQRКодаЧека, СтандартнаяОбработка) Экспорт
	
	ВыводQRКодаЧека = Истина;
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Переопределяет формат события от устройств ввода
// Параметры:
//  НовыйФормат - Булево - Событие от устройств ввода работают в новом формате 
//  СтандартнаяОбработка - Булево - выполнение стандартной обработки
//
Процедура СобытиеУстройствВводаНовыйФормат(НовыйФормат, СтандартнаяОбработка) Экспорт

КонецПроцедуры

#КонецОбласти

#Область РаботаСОборудованиемСФормы

// Начать подключение необходимых типов оборудования при открытии формы.
//
// Параметры:
// Форма - УправляемаяФорма
// ПоддерживаемыеТипыПодключаемогоОборудования - Строка
//  Содержит перечень типов подключаемого оборудования, разделенных запятыми.
//
Процедура НачатьПодключениеОборудованиеПриОткрытииФормы(Форма, ПоддерживаемыеТипыПодключаемогоОборудования) Экспорт
	
	ОповещениеПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", МенеджерОборудованияКлиентПереопределяемый);
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(ОповещениеПриПодключении, Форма, ПоддерживаемыеТипыПодключаемогоОборудования);
	
КонецПроцедуры

// Начать отключать оборудование по типу при закрытии формы.
//
// Параметры:
// Форма - УправляемаяФорма
//
Процедура НачатьОтключениеОборудованиеПриЗакрытииФормы(Форма) Экспорт
	
	ОповещениеПриОтключении = Новый ОписаниеОповещения("ОтключитьОборудованиеЗавершение", МенеджерОборудованияКлиентПереопределяемый);
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(ОповещениеПриОтключении, Форма);
	
КонецПроцедуры

// Начать отключать оборудование по типу при закрытии формы - Завершение.
//
// Параметры:
//  РезультатВыполнения - Структура
//  Параметры - Структура
//
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

// Начать отключать оборудование по типу при закрытии формы - Завершение.
//
// Параметры:
//  РезультатВыполнения - Структура
//  Параметры - Структура
//
Процедура ОтключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При отключении оборудования произошла ошибка: ""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСФормойЭкземпляраОборудования

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПриОткрытии".
//
// Параметры:
// Объект - СправочникОбъект.ПодключаемоеОборудование - объект подключаемого оборудования.
// ЭтаФорма - ФормаКлиентскогоПриложения - форма владелец.
// Отказ - Булево - признак отказа.
//
Процедура ЭкземплярОборудованияПриОткрытии(Объект, ЭтаФорма, Отказ) Экспорт
	
КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПередЗакрытием".
//
//
// Параметры:
// Объект - СправочникОбъект.ПодключаемоеОборудование - объект подключаемого оборудования.
// ЭтаФорма - ФормаКлиентскогоПриложения - форма владелец.
// Отказ - Булево - признак отказа.
// СтандартнаяОбработка - Булево - признак стандартной обработки.
//
Процедура ЭкземплярОборудованияПередЗакрытием(Объект, ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПередЗаписью".
//
// Параметры:
// Объект - СправочникОбъект.ПодключаемоеОборудование - объект подключаемого оборудования.
// ЭтаФорма - ФормаКлиентскогоПриложения - форма владелец.
// Отказ - Булево - признак отказа.
// ПараметрыЗаписи - Структура - параметры записи оборудования.
//
Процедура ЭкземплярОборудованияПередЗаписью(Объект, ЭтаФорма, Отказ, ПараметрыЗаписи) Экспорт
	
КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ПослеЗаписи".
//
// Параметры:
// Объект - СправочникОбъект.ПодключаемоеОборудование - объект подключаемого оборудования.
// ЭтаФорма - ФормаКлиентскогоПриложения - форма владелец.
// ПараметрыЗаписи - Структура - параметры записи оборудования.
//
Процедура ЭкземплярОборудованияПослеЗаписи(Объект, ЭтаФорма, ПараметрыЗаписи) Экспорт
	
КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ОбработкаНавигационнойСсылки".
//
// Параметры:
// Объект - СправочникОбъект.ПодключаемоеОборудование - объект подключаемого оборудования.
// ЭтаФорма - ФормаКлиентскогоПриложения - форма владелец.
// НавигационнаяСсылкаФорматированнойСтроки - НавигационнаяСсылка - навигационная ссылка.
// СтандартнаяОбработка - Булево - признак стандартной обработки.
//
Процедура ЭкземплярОборудованияОбработкаНавигационнойСсылки(Объект, ЭтаФорма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Дополнительные переопределяемые действия с управляемой формой в Экземпляре оборудования
// при событии "ТипОборудованияОбработкаВыбора".
//
// Параметры:
// Объект - СправочникОбъект.ПодключаемоеОборудование - объект подключаемого оборудования.
// ЭтаФорма - ФормаКлиентскогоПриложения - форма владелец.
// ЭтотОбъект - СправочникОбъект.ПодключаемоеОборудование - текущий объект подключаемого оборудования.
// Элемент - Элемент - изменяемый элемент.
// ВыбранноеЗначение - ПеречислениеСсылка.ТипыПодключаемогоОборудования - выбранное значение.
//
Процедура ЭкземплярОборудованияТипОборудованияВыбор(Объект, ЭтаФорма, ЭтотОбъект, Элемент, ВыбранноеЗначение) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область РаспределеннаяФискализации

// Переопределяемые действия после открытия чека в очереди чеков.
//
// Параметры:
//  ПараметрыВыполнения - Структура - Параметры выполнения команды
//  ДополнительныеПараметры - Произвольный
//
Процедура ФискализацияЧековВОчередиПослеОткрытияЧека(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ОбщегоНазначенияРМККлиентПереопределяемый.ПослеОткрытияЧека(ПараметрыВыполнения, ДополнительныеПараметры);	
КонецПроцедуры

// Переопределяемые действия после ошибки печати чека в очереди чеков.
//
// Параметры:
//  ПараметрыВыполнения - Структура - Параметры выполнения команды
//  ДополнительныеПараметры - Произвольный
//
Процедура ФискализацияЧековВОчередиПослеОшибкиПечатиЧека(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ОбщегоНазначенияРМККлиентПереопределяемый.ПослеОшибкиПечатиЧека(ПараметрыВыполнения, ДополнительныеПараметры);
КонецПроцедуры

#КонецОбласти

#Область РаботаСФормойЭкземпляраФискальныеОперации

// Дополнительные переопределяемые действия с управляемой формой в Фискальные операции
// при событии "ОбработкаНавигационнойСсылки".
//
// Параметры:
//  Запись - РегистрСведенийМенеджерЗаписи.ФискальныеОперации
//  ЭтаФорма - Форма
//  НавигационнаяСсылкаФорматированнойСтроки - Строка
//  СтандартнаяОбработка - Булево - признак стандартной обработки.
//
Процедура ФормаЗаписиФискальныеОперацииОбработкаНавигационнойСсылки(Запись, ЭтаФорма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

#КонецОбласти

// Устаревшая. для обратной совместимости
Процедура ОбработатьСобытие() Экспорт
	
	глПодключаемоеОборудованиеСобытиеОбработано = Истина;
	
КонецПроцедуры

#КонецОбласти