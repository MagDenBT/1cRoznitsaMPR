
#Область ПрограммныйИнтерфейс

// Процедура заполняет доступные права для текущего пользователя.
// Параметры:
//  Форма - форма нового РМК
//
Процедура ЗаполнитьТаблицуРолейПользователя(Форма) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.ЗаполнитьТаблицуРолейПользователя(Форма);
	
КонецПроцедуры

// Определяет доступность операций для торговой точки. В сценариях оплаты
// различных платежных систем существуют отличия, поэтому ряд операций могут
// быть запрещены для выполнения. Метод следует использовать для настройки
// элементов форм оплаты и возвратов и получение общих настроек интеграции.
//
// Параметры:
//  Интеграция - СправочникСсылка.НастройкиИнтеграцииСПлатежнымиСистемами -
//                  настройка выполнения операции платежной системы.
//
// Возвращаемое значение:
//  Структура - информация о доступных операциях:
//    *ОтменаЗаказа - Булево - признак доступности отмены не оплаченного
//                    заказа в платежной системе. Для выполнения операции
//                    следует использовать метод ИнтеграцияСПлатежнымиСистемами.ОтменитьЗаказНаОплату;
//    *ОтменаОплаты - Булево - признак доступности отмены оплаченного
//                    заказа (отмена транзакции) в платежной системе. Для выполнения операции
//                    следует использовать метод ИнтеграцияСПлатежнымиСистемами.ОтменитьОплату;
//    *СрокЖизниQRКода - Булево - признак доступности установки максимального
//                       срока действия QR-кода;
//    *ПлатежнаяСсылка - Булево - признак доступности использования платежной ссылки
//                       для выполнения оплаты;
//    *ВыборПлатежнойСистемыВозврата - Булево - признак доступности возврата оплаты
//                                     в платежную систему отличную от исходной. Для
//                                     получения списка доступных платежных систем следует 
//                                     использовать метод ИнтеграцияСПлатежнымиСистемами.ПлатежныеСистемыВозврата;
//    *Идентификатор - Строка - строковый идентификатор платежной системы или участника СБП;
//    *СинонимСистемы - Строка - синоним платежной системы для печати.
//
Функция НастройкиТорговойТочки(Интеграция) Экспорт
	
	НастройкиИнтеграции = ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.НастройкиТорговойТочки(Интеграция);
	
	Возврат НастройкиИнтеграции;
	
КонецФункции

// Формирование изображения идентификатора оплаты (QR-кода).
//
// Параметры: 
//  ТорговаяТочка - СправочникСсылка.НастройкиИнтеграцииСПлатежнымиСистемами -
//                  настройка интеграции с платежной системой;
//  QRКод - Строка - идентификатор оплаты, полученный см.
//                   ИнтеграцияСПлатежнымиСистемами.ИдентификаторОплаты;
//  УникальныйИдентификатор - УникальныйИдентификатор - идентификатор для установки поля данные qr-кода;
//  Размер - Число - размер QR-кода в пикселях;
//
// Возвращаемое значение:
//  Структура - информация о QR-коде:
//    *ИдентификаторQRКода - Строка - строковый идентификатор QRКода;
//    *КартинкаQRКода - Base64 - картинка QR-кода
//    *ДанныеQRКода - Строка - адрес хранилища данных QR-кода.
//
Функция СформироватьДанныеQRКода(Интеграция, Идентификатор, УникальныйИдентификатор) Экспорт 
	
	СтруктураКода = ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.СформироватьДанныеQRКода(Интеграция, 
																				Идентификатор, 
																				УникальныйИдентификатор);
	
	Возврат СтруктураКода;

КонецФункции

// Формирование строку, в которое добавляются все необходимые идентификаторы
// платежных систем для выполнения возврата оплаты.
//
// Параметры:
//  ТорговаяТочка - СправочникСсылка.НастройкиИнтеграцииСПлатежнымиСистемами -
//                  настройка интеграции с платежной системой;
//  ДокументОплаты - ОпределяемыйТип.ДокументОперацииБИП - документ, который отражает
//                   оплату в информационной базе.
//
// Возвращаемое значение: 
//  Строка - набор идентификаторов операции оплаты, которые должны быть переданы при возврате.
//
Функция ИдентификаторыОперацииОплаты(Интеграция, ДокументОплаты) Экспорт
	
	ИдентификаторОплаты = ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.ИдентификаторыОперацииОплаты(Интеграция, ДокументОплаты);
	
	Возврат ИдентификаторОплаты;
	
КонецФункции

// Отменяет заказ на оплату, если оплата не была ранее подтверждена.
//
// Параметры:
//  ДокументОплаты - ОпределяемыйТип.ДокументОплатыБИП - документ, который отражает
//                    продажу в информационной базе;
//
// Возвращаемое значение:
//  Структура - см. ИнтеграцияСПлатежнымиСистемами.ОтменитьЗаказНаОплату.
//
Функция ОтменитьЗаказНаОплату(ПараметрыПроцедуры) Экспорт
	
	РезультатОперации = ИнтеграцияСПлатежнымиСистемамиРТСервер.ОтменитьЗаказНаОплату(ПараметрыПроцедуры);
	
	Возврат РезультатОперации;
	
КонецФункции

// Возвращает структуру пустой ссылки на документ оплаты
//
// Параметры:
//  СсылкаНаВозврат - булево - признак, что нужно вернуть ссылку на документ возврата
//
// Возвращаемое значение:
//  Структура - информация о QR-коде:
//    *ЧекККМВОбработке - ДокументСсылка - пустая ссылка на документ чекККМ.
//    *НовыйЧек - Булево - признак, что это новая ссылка
//
Функция ПолучитьСсылкуНовогоЧекаККМ(СсылкаНаВозврат = Ложь) Экспорт
	
	СтруктураДанныхДокумента = ИнтеграцияСПлатежнымиСистемамиРТСервер.ПолучитьСсылкуНовогоЧекаККМ();
	
	Возврат СтруктураДанныхДокумента;
	
КонецФункции

// Возвращает структуру чека оплаты для автоматического выполнения возврата
//
// Параметры:
//  ДокументОплаты - пустая ссылка на документ чекККМ.
//  
// Возвращаемое значение:
//  Структура - информация о QR-коде:
//    *ИдентификаторОплаты - строка - идентификатор оплаты
//    *ВидОплатыВозврата - ОпределяемыйТип.ВидОплатыРМК - на вид оплаты возврата
//    *Организация - ОпределяемыйТип.ОрганизацияРМК - организация возврата
//    *ИдентификаторПС - строка - идентификатор платежной системы
//
Функция ПолучитьПараметрыДокументаОплаты(ДокументОплаты) Экспорт
	
	ПараметрыВозврата = ИнтеграцияСПлатежнымиСистемамиРТСервер.ПолучитьПараметрыДокументаОплаты(ДокументОплаты);
	
	Возврат ПараметрыВозврата;
	
КонецФункции

// Отменяет все выполняемые действия с операций платежной системой на форме
//
// Параметры:
//  ДокументОплаты - ОпределяемыйТип.ДокументОплатыБИП - документ, который отражает
//                    продажу в информационной базе;
//  Интеграция - СправочникСсылка.НастройкиИнтеграцииСПлатежнымиСистемами -
//                  настройка интеграции с платежной системой;
//  ИдентификаторЗаданияФормированияQRКода - УникальныйИдентификатор - идентификатор 
//  																   длительной операции по формированию qr-кода
//  ИдентификаторЗаданияПроверкиСтатуса - УникальныйИдентификатор    - идентификатор 
//  															       длительной операции по проверки статуса оплаты
//  ИдентификаторЗаданияВозврата - УникальныйИдентификатор           - идентификатор 
//  														           длительной операции по проверке статуса возврата
//
// Возвращаемое значение:
//  Структура - см. ИнтеграцияСПлатежнымиСистемами.ОтменитьЗаказНаОплату.
//
Функция ОтменитьОперацию(ДокументОплаты, Интеграция, ИдентификаторЗаданияФормированияQRКода, ИдентификаторЗаданияПроверкиСтатуса, ИдентификаторЗаданияВозврата) Экспорт
	
	Результат = ИнтеграцияСПлатежнымиСистемамиРТСервер.ОтменитьОперацию(ДокументОплаты, 
																	Интеграция, 
																	ИдентификаторЗаданияФормированияQRКода, 
																	ИдентификаторЗаданияПроверкиСтатуса, 
																	ИдентификаторЗаданияВозврата);
	
	Возврат Результат;
	
КонецФункции

// Возвращает текст запроса для получения подключенных настроек интеграция в регистре "Соответствие настроек интеграции"
//
//  ИдентификаторПлатежнойСистемы - строка - отбор по идентификатору платежной системы
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаНастройкиИнтеграции(ИдентификаторПлатежнойСистемы = Неопределено) Экспорт
	
	ТекстЗапроса = ИнтеграцияСПлатежнымиСистемамиРТСервер.ТекстЗапросаНастройкиИнтеграции(ИдентификаторПлатежнойСистемы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область СлужбныйПрограммныйИнтерфейс

// Формирование QR-кода для оплаты в платежной системе.
//
// Параметры:
//  ПараметрыПроцедуры - Структура - параметры выполнения длительной операции;
//  АдресРезультата - Строка - адрес результата операции во временном хранилище.
//
Процедура ИдентификаторОплатыВПлатежнойСистеме(ПараметрыПроцедуры, АдресРезультата) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.ИдентификаторОплатыВПлатежнойСистеме(ПараметрыПроцедуры, АдресРезультата);
	
КонецПроцедуры

// Определяет статус оплаты в платежной системе.
//
// Параметры:
//  ДокументОплаты - ОпределяемыйТип.ДокументОплатыБИП - документ, который отражает
//                    продажу в информационной базе;
//
// Возвращаемое значение:
//  Структура - см. ИнтеграцияСПлатежнымиСистемами.ОтменитьЗаказНаОплату.
//
Процедура СтатусОплатыВПлатежнойСистеме(ПараметрыПроцедуры, АдресРезультата) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.СтатусОплатыВПлатежнойСистеме(ПараметрыПроцедуры, АдресРезультата);
	
КонецПроцедуры

Процедура ВозвратОплаты(ПараметрыПроцедуры, АдресРезультата) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.ВозвратОплаты(ПараметрыПроцедуры, АдресРезультата);
	
КонецПроцедуры

// Производит получение статуса возврата по документу.
//
// Параметры:
//  ПараметрыПроцедуры - Структура - параметры выполнения длительной операции;
//  АдресРезультата - Строка - адрес результата операции во временном хранилище.
//
Процедура СтатусВозвратОплаты(ПараметрыПроцедуры, АдресРезультата) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.СтатусВозвратОплаты(ПараметрыПроцедуры, АдресРезультата);
	
КонецПроцедуры

// Подтверждает возврат в платежной системе.
//
// Параметры:
//  ДокументОплаты - ОпределяемыйТип.ДокументОперацииБИП - документ, который отражает
//                   оплату в информационной базе;
//  Интеграция - СправочникСсылка.НастройкиИнтеграцииСПлатежнымиСистемами -
//                  настройка выполнения операции платежной системы.
//
// Возвращаемое значение:
//  Структура - см. ИнтеграцияСПлатежнымиСистемами.ПодтвердитьВозврат.
//
Функция ПодтвердитьВозврат(ДокументВозврата, Интеграция) Экспорт
	
	РезультатОперации = ИнтеграцияСПлатежнымиСистемамиРТСервер.ПодтвердитьВозврат(ДокументВозврата, Интеграция);
	
	Возврат РезультатОперации;
	
КонецФункции

#КонецОбласти
