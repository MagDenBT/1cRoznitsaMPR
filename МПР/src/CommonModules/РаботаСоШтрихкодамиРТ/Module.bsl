#Область ПрограммныйИнтерфейс

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьПрефиксыШтрихкодовНоменклатуры.
Процедура ЗаполнитьПрефиксыШтрихкодовНоменклатуры(СтруктураПрефиксов) Экспорт
	
	Префикс = НСтр("ru='2'");
	СтруктураПрефиксов.НоменклатураВесовой = Префикс + Константы.ПрефиксВнутреннегоШтрихкодаВесовогоТовара.Получить();
	СтруктураПрефиксов.НоменклатураФасованный = Префикс + Константы.ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара.Получить();
	СтруктураПрефиксов.НоменклатураШтучный = Префикс + Константы.ПрефиксВнутреннегоШтрихкодаШтучногоТовара.Получить();
	СтруктураПрефиксов.СерийныйНомерСертификата = Префикс + Константы.ПрефиксВнутреннегоШтрихкодаПодарочногоСертификата.Получить();
	
	Если Константы.ИспользоватьКодыВидовНоменклатурнойКлассификации.Получить() Тогда
		СтруктураПрефиксов.НоменклатураСИЗ = НСтр("ru='24'");
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ТекстЗапросаШтрихкоды.
Функция ТекстЗапросаШтрихкоды(ФильтрПоискаПоШтрихкоду) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	Штрихкоды.Владелец КАК Владелец,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.Упаковка КАК Упаковка,
	|	NULL КАК Серия,
	|	NULL КАК Партия,
	|	1 КАК Количество,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.НоменклатураШтучный)
	|		КОГДА Штрихкоды.Владелец ССЫЛКА Справочник.Справки2ЕГАИС
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА Штрихкоды.Владелец ССЫЛКА Справочник.ИнформационныеКарты
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.Карта)
	|		КОГДА Штрихкоды.Владелец ССЫЛКА Справочник.СерийныеНомера
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.СерийныйНомерСертификата)
	|	КОНЕЦ КАК ШаблонШтрихкода
	|ПОМЕСТИТЬ ШтрихкодыВсе
	|ИЗ
	|	РегистрСведений.Штрихкоды КАК Штрихкоды";
	
	Если ФильтрПоискаПоШтрихкоду.Количество() > 0 Тогда
		ТекстЗапроса = ТекстЗапроса + " ГДЕ Штрихкоды.Штрихкод = &Штрихкод";
		Если ФильтрПоискаПоШтрихкоду.Свойство("ЭтоКодМаркировки") Тогда
			ТекстЗапроса = ТекстЗапроса + " И Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
				| И НЕ Штрихкоды.Владелец В
				|(ВЫБРАТЬ
				|	ШтрихкодыУпаковокТоваров.Номенклатура КАК Номенклатура
				|ИЗ
				|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
				|ГДЕ
				|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода = &ШтрихкодМарки)";
			Возврат ТекстЗапроса;
		КонецЕсли;
		
		КоличествоТипов = 0;
		ТекстТипов = "";
		Если ФильтрПоискаПоШтрихкоду.Свойство("Номенклатура") Тогда
			ТекстТипов = ТекстТипов + " ,ТИП(Справочник.Номенклатура)";
			КоличествоТипов = КоличествоТипов + 1;
		КонецЕсли;
		Если ФильтрПоискаПоШтрихкоду.Свойство("Справки2ЕГАИС") Тогда
			ТекстТипов = ТекстТипов + " ,ТИП(Справочник.Справки2ЕГАИС)";
			КоличествоТипов = КоличествоТипов + 1;
		КонецЕсли;
		Если ФильтрПоискаПоШтрихкоду.Свойство("ИнформационныеКарты") Тогда
			ТекстТипов = ТекстТипов + " ,ТИП(Справочник.ИнформационныеКарты)";
			КоличествоТипов = КоличествоТипов + 1;
		КонецЕсли;
		Если ФильтрПоискаПоШтрихкоду.Свойство("СерийныеНомера") Тогда
			ТекстТипов = ТекстТипов + " ,ТИП(Справочник.СерийныеНомера)";
			КоличествоТипов = КоличествоТипов + 1;
		КонецЕсли;
		
		Если НЕ КоличествоТипов = 4 И НЕ КоличествоТипов = 0 Тогда
			ТекстЗапроса = ТекстЗапроса + " И ТИПЗНАЧЕНИЯ(Штрихкоды.Владелец) В (" + Сред(ТекстТипов,3) + ")";
		КонецЕсли;
		
		Если ФильтрПоискаПоШтрихкоду.Свойство("СерииНоменклатуры") Тогда
			Если НЕ ФильтрПоискаПоШтрихкоду.СерииНоменклатуры = Неопределено Тогда
				ТекстЗапроса = ТекстЗапроса + " И ТИПЗНАЧЕНИЯ(Штрихкоды.Владелец) = ТИП(Справочник.СерийныеНомера)
					| И Штрихкоды.Владелец.Владелец = &НоменклатураДляПоискаСерийногоНомера";
				КоличествоТипов = КоличествоТипов + 1;
			КонецЕсли;
		КонецЕсли;
		
		Если КоличествоТипов = 0 Тогда
			ТекстЗапроса = ТекстЗапроса + " И ЛОЖЬ";
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ТекстЗапросаСерии.
Функция ТекстЗапросаСерии(ФильтрПоискаПоШтрихкоду) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
		Возврат "";
	КонецЕсли;
	
	СУсловиемПоиска = ФильтрПоискаПоШтрихкоду.Количество() > 0;
	Если СУсловиемПоиска И НЕ ФильтрПоискаПоШтрихкоду.Свойство("СерииНоменклатуры") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Номер,
	|	СерииНоменклатуры.Ссылка,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	1,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.ВидНоменклатуры.ИспользованиеСерий =
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
	|	И &Условие";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие",
		?(СУсловиемПоиска, "СерииНоменклатуры.Номер = &Штрихкод", "НЕ СерииНоменклатуры.Номер = """" "));
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ТекстЗапросаКодыSKU.
Функция ТекстЗапросаКодыSKU(ФильтрПоискаПоШтрихкоду) Экспорт
	
	Если НЕ ФильтрПоискаПоШтрихкоду.Свойство("ШаблонКодТовараSKU") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КодыТоваровSKU.SKU,
	|	КодыТоваровSKU.Номенклатура,
	|	КодыТоваровSKU.Характеристика,
	|	КодыТоваровSKU.Упаковка,
	|	NULL,
	|	NULL,
	|	&КоличествоТовара,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.НоменклатураВесовой)
	|ИЗ
	|	РегистрСведений.КодыТоваровSKU КАК КодыТоваровSKU
	|ГДЕ
	|	КодыТоваровSKU.SKU = &КодТовара";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ТекстЗапросаШтрихкодыУпаковокТоваров.
Функция ТекстЗапросаШтрихкодыУпаковокТоваров(ФильтрПоискаПоШтрихкоду) Экспорт
	
	СУсловиемПоиска = ФильтрПоискаПоШтрихкоду.Количество() > 0;
	
	Если СУсловиемПоиска И НЕ ФильтрПоискаПоШтрихкоду.Свойство("Номенклатура") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Штрихкоды.ЗначениеШтрихкода,
	|	Штрихкоды.Ссылка,
	|	Штрихкоды.Характеристика,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Упаковка ССЫЛКА Справочник.УпаковкиНоменклатуры
	|			ТОГДА Штрихкоды.Упаковка
	|		ИНАЧЕ &ПустаяУпаковка
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|	КОГДА Штрихкоды.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)
	|		И НЕ Штрихкоды.Количество = 0
	|			ТОГДА Штрихкоды.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров КАК Штрихкоды";
	
	Если СУсловиемПоиска Тогда
		ТекстЗапроса = ТекстЗапроса + " ГДЕ Штрихкоды.ЗначениеШтрихкода = &ШтрихкодМарки";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ТекстЗапросаНоменклатурнойКлассификации.
Функция ТекстЗапросаНоменклатурнойКлассификации(ФильтрПоискаПоШтрихкоду) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКодыВидовНоменклатурнойКлассификации") Тогда
		Возврат "";
	КонецЕсли;
	
	СУсловиемПоиска = ФильтрПоискаПоШтрихкоду.Количество() > 0;
	
	Если СУсловиемПоиска И НЕ ФильтрПоискаПоШтрихкоду.Свойство("Номенклатура") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Номенклатура.КодВидаНоменклатурнойКлассификации,
	|	Номенклатура.Ссылка,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	1,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.НоменклатураСИЗ)
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура";
	
	ТекстЗапроса = ТекстЗапроса + ?(СУсловиемПоиска,
		" ГДЕ Номенклатура.КодВидаНоменклатурнойКлассификации = &Штрихкод",
		" ГДЕ НЕ Номенклатура.КодВидаНоменклатурнойКлассификации = """" ");
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ТекстЗапросаШаблоныРегистрацииКарт.
Функция ТекстЗапросаШаблоныРегистрацииКарт(ФильтрПоискаПоШтрихкоду) Экспорт
	
	Если НЕ ФильтрПоискаПоШтрихкоду.Свойство("РегистрацияНовойКарты") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	&Штрихкод,
	|	НЕОПРЕДЕЛЕНО,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.Карта)
	|ИЗ
	|	РегистрСведений.ШаблоныРегистрацииНовыхКарт КАК ШаблоныРегистрацииНовыхКарт
	|ГДЕ
	|	НЕ ШаблоныРегистрацииНовыхКарт.ВидКарты = ЗНАЧЕНИЕ(Перечисление.ВидыИнформационныхКарт.Магнитная)
	|	И ШаблоныРегистрацииНовыхКарт.НачалоДиапазона <= &Штрихкод
	|	И ШаблоныРегистрацииНовыхКарт.КонецДиапазона >= &Штрихкод
	|	И ШаблоныРегистрацииНовыхКарт.ДлинаКода = &ДлинаШтрихкода
	|	И НЕ ИСТИНА В
	|				(ВЫБРАТЬ
	|					ИСТИНА КАК ЕстьКарта
	|				ИЗ
	|					РегистрСведений.Штрихкоды КАК Штрихкоды
	|				ГДЕ
	|					Штрихкоды.Штрихкод = &Штрихкод
	|					И Штрихкоды.Владелец ССЫЛКА Справочник.ИнформационныеКарты)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ТекстЗапросаПоТелефону.
Функция ТекстЗапросаПоТелефону(ФильтрПоискаПоШтрихкоду) Экспорт
	
	Если НЕ ФильтрПоискаПоШтрихкоду.Свойство("ИнформационныеКарты")
		И НЕ ФильтрПоискаПоШтрихкоду.Свойство("ПоследниеЦифрыТелефона") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&НомерТелефона,
	|	ИнформационныеКарты.Ссылка,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.Телефон)
	|ИЗ
	|	Справочник.ИнформационныеКарты КАК ИнформационныеКарты
	|ГДЕ
	|	ИнформационныеКарты.ВладелецКарты В
	|			(ВЫБРАТЬ
	|				КонтактнаяИнформация.Ссылка КАК ВладелецКарты
	|			ИЗ
	|				Справочник.ФизическиеЛица.КонтактнаяИнформация КАК КонтактнаяИнформация
	|			ГДЕ
	|				КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|				И КонтактнаяИнформация.НомерТелефона = &НомерТелефона
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				КонтактнаяИнформация.Ссылка
	|			ИЗ
	|				Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
	|			ГДЕ
	|				КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|				И КонтактнаяИнформация.НомерТелефона = &НомерТелефона
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				Контрагенты.Ссылка
	|			ИЗ
	|				Справочник.Контрагенты КАК Контрагенты
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК КонтактнаяИнформацияФЛ
	|					ПО
	|						Контрагенты.ФизЛицо = КонтактнаяИнформацияФЛ.Ссылка
	|							И КонтактнаяИнформацияФЛ.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|							И КонтактнаяИнформацияФЛ.НомерТелефона = &НомерТелефона
	|			ГДЕ
	|				Контрагенты.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо))";
	
	Если ФильтрПоискаПоШтрихкоду.Свойство("ПоследниеЦифрыТелефона") Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НомерТелефона = &НомерТелефона", "НомерТелефона ПОДОБНО &Штрихкод");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НомерТелефона", "&Штрихкод");
		
		ТекстЗапроса = ТекстЗапроса +
		"
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|";
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	&Штрихкод,
		|	КонтактнаяИнформация.Ссылка,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.Телефон)
		|ИЗ
		|	Справочник.ИнформационныеКарты.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Тип = Значение(Перечисление.ТипыКонтактнойИнформации.Телефон)
		|	И КонтактнаяИнформация.НомерТелефона ПОДОБНО &Штрихкод";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ТекстЗапросаПоАдресуЭП.
Функция ТекстЗапросаПоАдресуЭП(ФильтрПоискаПоШтрихкоду) Экспорт
	
	Если НЕ ФильтрПоискаПоШтрихкоду.Свойство("ИнформационныеКарты") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&АдресЭП,
	|	ИнформационныеКарты.Ссылка,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.АдресЭП)
	|ИЗ
	|	Справочник.ИнформационныеКарты КАК ИнформационныеКарты
	|ГДЕ
	|	ИнформационныеКарты.ВладелецКарты В
	|			(ВЫБРАТЬ
	|				КонтактнаяИнформация.Ссылка КАК ВладелецКарты
	|			ИЗ
	|				Справочник.ФизическиеЛица.КонтактнаяИнформация КАК КонтактнаяИнформация
	|			ГДЕ
	|				КонтактнаяИнформация.Тип = Значение(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|				И КонтактнаяИнформация.АдресЭП = &АдресЭП
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				КонтактнаяИнформация.Ссылка
	|			ИЗ
	|				Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
	|			ГДЕ
	|				КонтактнаяИнформация.Тип = Значение(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|				И КонтактнаяИнформация.АдресЭП = &АдресЭП
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				Контрагенты.Ссылка
	|			ИЗ
	|				Справочник.Контрагенты КАК Контрагенты
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК КонтактнаяИнформацияФЛ
	|					ПО
	|						Контрагенты.ФизЛицо = КонтактнаяИнформацияФЛ.Ссылка
	|							И КонтактнаяИнформацияФЛ.Тип = Значение(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|							И КонтактнаяИнформацияФЛ.АдресЭП = &АдресЭП
	|			ГДЕ
	|				Контрагенты.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо))";
	
	Возврат ТекстЗапроса;
		
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ТекстЗапросаДополнительныеОбъекты.
Функция ТекстЗапросаДополнительныеОбъекты(ФильтрПоискаПоШтрихкоду) Экспорт
	
	СУсловиемПоиска = ФильтрПоискаПоШтрихкоду.Количество() > 0;
	Если СУсловиемПоиска И НЕ ФильтрПоискаПоШтрихкоду.Свойство("ИнформационныеКарты") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИнформационныеКарты.КодКарты,
	|	ИнформационныеКарты.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка),
	|	NULL,
	|	NULL,
	|	1,
	|	ЗНАЧЕНИЕ(Перечисление.ШаблоныШтрихкодов.Карта)
	|ИЗ
	|	Справочник.ИнформационныеКарты КАК ИнформационныеКарты
	|ГДЕ
	|	НЕ ИнформационныеКарты.ПометкаУдаления
	|	И НЕ ИнформационныеКарты.ЭтоГруппа
	|	И &Условие";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие",
		?(СУсловиемПоиска, "ИнформационныеКарты.КодКарты = &Штрихкод",
			"НЕ ИнформационныеКарты.КодКарты = """" "));
	
	Возврат ТекстЗапроса;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ДобавлятьНеизвестнуюКИ.
Функция ДобавлятьНеизвестнуюКИ(Форма) Экспорт
	
	Если Форма.ИмяФормы = "ОбщаяФорма.АнализШтрихкодов" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ШтрихкодированиеРТКлиентСервер.ДоступенВводНомераТелефонаИлиАдресаЭП(Форма) Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ИспользуетсяЭлектроннаяОтправкаЧека") Тогда
			Возврат Форма.ИспользуетсяЭлектроннаяОтправкаЧека = Истина;
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект, "КассаККМ") Тогда
				Возврат ПодключаемоеОборудованиеРТ.ПроверитьВозможностьПечатиБумажногоЧека(Форма.Объект.КассаККМ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьМассивСправочниковСКИ.
Процедура ЗаполнитьМассивСправочниковСКИ(СправочникиСКИ, ФильтрПоискаПоШтрихкоду) Экспорт
	
	СУсловиемПоиска = ФильтрПоискаПоШтрихкоду.Количество() > 0;
	
	СправочникиСКИ.Добавить("ИнформационныеКарты");
	
	Если НЕ СУсловиемПоиска Тогда
		СправочникиСКИ.Добавить("ФизическиеЛица");
		СправочникиСКИ.Добавить("Пользователи");
		СправочникиСКИ.Добавить("Контрагенты");
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ШаблоныРегистрацииНовыхКарт.
Функция ШаблоныРегистрацииНовыхКарт() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ШаблоныРегистрацииНовыхКарт.НаименованиеШаблона КАК ДополнительноеОписание,
	|	ШаблоныРегистрацииНовыхКарт.НачалоДиапазона КАК НачалоДиапазона,
	|	ШаблоныРегистрацииНовыхКарт.КонецДиапазона КАК КонецДиапазона,
	|	ШаблоныРегистрацииНовыхКарт.ДлинаКода КАК ДлинаШтрихкода
	|ИЗ
	|	РегистрСведений.ШаблоныРегистрацииНовыхКарт КАК ШаблоныРегистрацииНовыхКарт
	|ГДЕ
	|	НЕ ШаблоныРегистрацииНовыхКарт.ВидКарты = &ВидКартыМагнитная");
	
	Запрос.УстановитьПараметр("ВидКартыМагнитная", Перечисления.ВидыИнформационныхКарт.Магнитная);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ДополнитьСтрокуТаблицыВыбора.
Процедура ДополнитьСтрокуТаблицыВыбора(НоваяСтрока, СтрокаВыбора) Экспорт
	
	ДополнительныеДанные = СтрокаВыбора.ДополнительныеДанные;
	
	Если ДополнительныеДанные.Свойство("Карта") Тогда
		НоваяСтрока.ПредставлениеОбъекта = "" + ДополнительныеДанные.Карта + " (" + ДополнительныеДанные.ТипКарты + ")";
	ИначеЕсли ДополнительныеДанные.Свойство("СерийныйНомер") Тогда
		НоваяСтрока.ПредставлениеОбъекта = "" + ДополнительныеДанные.СерийныйНомер + " (" + ДополнительныеДанные.Номенклатура + ")";
	ИначеЕсли ДополнительныеДанные.Свойство("Серия") Тогда
		НоваяСтрока.ПредставлениеОбъекта = "" + ДополнительныеДанные.Серия + " (" + ДополнительныеДанные.Номенклатура + ")";	
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.КодИКоличествоВесовогоТовара.
Функция КодИКоличествоВесовогоТовара(Штрихкод) Экспорт
	
	Если Лев(Штрихкод, 1) = "2" Тогда
		ТипШтрихкода = ПодключаемоеОборудованиеРТ.ТипШтрихкода(Штрихкод);
		Если ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 Тогда
			
			ПрефиксВнутреннегоШтрихкодаВесовогоТовара = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ПрефиксВнутреннегоШтрихкодаВесовогоТовара");
			ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара");
			ДлинаКодаВесовогоТовара = СтрДлина(Формат(ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВерхняяГраницаДиапазонаSKUВесовогоТовара"), "ЧГ = 0"));
			
			ПрефиксКода = Лев(Штрихкод, 2);
			ПрефиксВесовой = "2" + ПрефиксВнутреннегоШтрихкодаВесовогоТовара;
			ПрефиксШтучный = "2" + ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара;
			ЭтоВесовой = ПрефиксКода = ПрефиксВесовой;
			ЭтоШтучный = ПрефиксКода = ПрефиксШтучный;
			
			Если ДлинаКодаВесовогоТовара < 5 Тогда
				ДлинаКодаВесовогоТовара = 5;
			КонецЕсли;
			
			Если ЭтоВесовой ИЛИ ЭтоШтучный Тогда
				
				КодТовара        = Число(Сред(Штрихкод, 3,  ДлинаКодаВесовогоТовара));
				КоличествоТовара = Число(Сред(Штрихкод, 3 + ДлинаКодаВесовогоТовара, 10 - ДлинаКодаВесовогоТовара));
				Если ЭтоВесовой Тогда // В количестве указан вес.
					КоличествоТовара = КоличествоТовара / 1000;
				КонецЕсли;
				
				Возврат Новый Структура("КодТовара, КоличествоТовара", КодТовара, КоличествоТовара);
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьДополнительныеДанныеОбъектовВыборки.
Процедура ЗаполнитьДополнительныеДанныеОбъектовВыборки(СтруктураШтрихкода, Выборка) Экспорт 
	
	ТипВладельца = ТипЗнч(Выборка.Владелец);
	ТипШтрихкода = ПодключаемоеОборудованиеРТ.ТипШтрихкода(Выборка.Штрихкод);

	Если ТипВладельца = Тип("СправочникСсылка.Номенклатура") Тогда
		СтруктураШтрихкода.Вставить("Номенклатура"         , Выборка.Владелец);
		СтруктураШтрихкода.Вставить("Характеристика"       , Выборка.Характеристика);
		СтруктураШтрихкода.Вставить("Упаковка"             , Выборка.Упаковка);
		СтруктураШтрихкода.Вставить("ТипШтрихкода"         , ТипШтрихкода);
		СтруктураШтрихкода.Вставить("ШтрихкодУпаковкиЕГАИС", Справочники.ШтрихкодыУпаковокТоваров.ПустаяСсылка());
		СтруктураШтрихкода.Вставить("ТипУпаковки"          , Перечисления.ТипыУпаковок.ПустаяСсылка());
		Если Выборка.ШаблонШтрихкода = Перечисления.ШаблоныШтрихкодов.НоменклатураВесовой Тогда
			СтруктураШтрихкода.Вставить("ВесИзШтрихкода", Истина);
		КонецЕсли;
	ИначеЕсли ТипВладельца = Тип("СправочникСсылка.СерийныеНомера") Тогда
		Номенклатура = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Владелец, "Владелец");
		СтруктураШтрихкода.Вставить("СерийныйНомер", Выборка.Владелец);
		СтруктураШтрихкода.Вставить("Номенклатура" , Номенклатура);
		Если Номенклатура.ПроизвольныйНоминал Тогда
			СтруктураШтрихкода.Вставить("ВвестиНоминал" , Истина);
		КонецЕсли;
	ИначеЕсли ТипВладельца = Тип("СправочникСсылка.СерииНоменклатуры") Тогда
		СтруктураШтрихкода.Вставить("Серия", Выборка.Владелец);
		СтруктураШтрихкода.Вставить("Номенклатура" , Выборка.Владелец.ВладелецСерии);
		ИспользоватьХарактеристики = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") И 
			Выборка.Владелец.ВидНоменклатуры.ИспользоватьХарактеристики;
		СтруктураШтрихкода.Вставить("ИспользоватьХарактеристики" , ИспользоватьХарактеристики);
		Если Выборка.Владелец.ВидНоменклатуры.ИспользованиеХарактеристик = 
				Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры Тогда
			ВладелецХарактеристики = Выборка.Владелец.ВладелецСерии;
		Иначе
			ВладелецХарактеристики = Выборка.Владелец.ВидНоменклатуры;
		КонецЕсли;
		СтруктураШтрихкода.Вставить("ВладелецХарактеристики"     , ВладелецХарактеристики);
	ИначеЕсли ТипВладельца = Тип("СправочникСсылка.ИнформационныеКарты") Тогда
		РеквизитыКарты = Новый Структура;
		РеквизитыКарты.Вставить("ТипКарты");
		РеквизитыКарты.Вставить("ВладелецКарты");
		ЗначенияРеквизитовКарты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Выборка.Владелец, РеквизитыКарты);
		СтруктураШтрихкода.Вставить("Карта", Выборка.Владелец);
		СтруктураШтрихкода.Вставить("ТипКарты", ЗначенияРеквизитовКарты.ТипКарты);
		СтруктураШтрихкода.Вставить("ВладелецКарты", ЗначенияРеквизитовКарты.ВладелецКарты);
		СтруктураШтрихкода.Вставить("ЭтоРегистрационнаяКарта", ЗначенияРеквизитовКарты.ТипКарты = 
			Перечисления.ТипыИнформационныхКарт.Регистрационная);
		СтруктураШтрихкода.Вставить("КодПоиска", Выборка.Штрихкод);
	ИначеЕсли ТипВладельца = Тип("СправочникСсылка.Справки2ЕГАИС") Тогда
		ДанныеНоменклатуры = ИнтеграцияЕГАИСРТ.ДанныеНоменклатурыПоСправке2(Выборка.Владелец);
		СтруктураШтрихкода.Вставить("Номенклатура", ДанныеНоменклатуры.Номенклатура);
		Если ДанныеНоменклатуры.Уникальность Тогда // не заполняем характеристику, если не можем однозначно ее идентифицировать
			СтруктураШтрихкода.Вставить("Характеристика", ДанныеНоменклатуры.Характеристика);
		Иначе
			СтруктураШтрихкода.Вставить("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		КонецЕсли;
		СтруктураШтрихкода.Вставить("Упаковка", ДанныеНоменклатуры.Упаковка);
		СтруктураШтрихкода.Вставить("ТипШтрихкода", ТипШтрихкода);
		СтруктураШтрихкода.Вставить("Справка2", Выборка.Владелец);
	ИначеЕсли ТипВладельца = Тип("СправочникСсылка.ШтрихкодыУпаковокТоваров") Тогда
		СтруктураШтрихкода.Вставить("Номенклатура", Выборка.Владелец.Номенклатура);
		СтруктураШтрихкода.Вставить("Характеристика", Выборка.Характеристика);
		СтруктураШтрихкода.Вставить("Упаковка", Выборка.Упаковка);
		СтруктураШтрихкода.Вставить("ТипШтрихкода", ТипШтрихкода);
		СтруктураШтрихкода.Вставить("ШтрихкодУпаковкиЕГАИС", Выборка.Владелец);
		СтруктураШтрихкода.Вставить("ТипУпаковки", Выборка.Владелец.ТипУпаковки);
		СтруктураШтрихкода.Вставить("ВесИзШтрихкода", Истина);
	Иначеесли ТипВладельца = Тип("Неопределено") Тогда
		Если Выборка.ШаблонШтрихкода = Перечисления.ШаблоныШтрихкодов.Телефон Тогда
			НомерТелефона = Сред(Выборка.Штрихкод,2);
			ТелефонЧислом  = Число(Прав(НомерТелефона, 10));
			ТелефонСтрокой = "";
			ПодключаемоеОборудованиеРТ.ПреобразоватьТелефонКПользовательскомуВиду(ТелефонЧислом, ТелефонСтрокой);
			СтруктураШтрихкода.Вставить("НомерТелефона", НомерТелефона);
			СтруктураШтрихкода.Вставить("ТелефонСтрокой", ТелефонСтрокой);
		ИначеЕсли Выборка.ШаблонШтрихкода = Перечисления.ШаблоныШтрихкодов.АдресЭП Тогда
			СтруктураШтрихкода.Вставить("АдресЭП", Выборка.Штрихкод);
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураШтрихкода.Свойство("Номенклатура") И НЕ СтруктураШтрихкода.Свойство("СерийныйНомер") Тогда
		СтруктураШтрихкода.Вставить("ОтображатьОстатки", Истина);
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ОстаткиПоСкладу.
Функция ОстаткиПоСкладу(ТаблицаНоменклатурыДляОстатков, СкладОстатков) Экспорт
	
	ТаблицаОстатков = ЗапасыСервер.ОстаткиНоменклатурыПоМагазину(ТаблицаНоменклатурыДляОстатков, СкладОстатков);
	Возврат ТаблицаОстатков;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ТекущийСклад.
Функция ТекущийСклад() Экспорт
	
	Возврат ПараметрыСеанса.ТекущийМагазин;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ДополнитьСтруктуруРезультатами.
Процедура СкорректироватьСтруктуруРезультата(
			СтруктураПараметров,
			Штрихкод,
			СтруктураДействий,
			НеизвестныеДанныеПО,
			ВозможнаРегистрацияНовойНоменклатуры) Экспорт
	
	НайденоОбъектов = СтруктураПараметров.ЗначенияПоиска.Количество();
	Если НайденоОбъектов = 1 Тогда
		ЗначениеПоиска = СтруктураПараметров.ЗначенияПоиска[0];
		Если ЗначениеПоиска.ШаблонШтрихкода = ПредопределенноеЗначение("Перечисление.ШаблоныШтрихкодов.Карта")
			И ЗначениеПоиска.Владелец = Неопределено Тогда
			НайденоОбъектов = 0;
		КонецЕсли;
	КонецЕсли;
	
	Если НайденоОбъектов = 0 Тогда
		
		ТипШтрихкодаРТ = ПодключаемоеОборудованиеРТ.ТипШтрихкода(Штрихкод);
		
		ПодключаемоеОборудованиеРТ.ДополнитьСтруктуруДляРегистрацииНовогоОбъекта(
			СтруктураПараметров,
			Штрихкод,
			СтруктураДействий,
			НеизвестныеДанныеПО,
			ТипШтрихкодаРТ,
			ВозможнаРегистрацияНовойНоменклатуры);
		
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.ДополнитьПараметрыЗапросаПоиска.
Процедура ДополнитьПараметрыЗапросаПоиска(Запрос, Форма, Штрихкод) Экспорт
	
	Запрос.УстановитьПараметр("ПустаяУпаковка", Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ФильтрПоискаПоШтрихкоду") Тогда
		Если НЕ Форма.ФильтрПоискаПоШтрихкоду = Неопределено Тогда
			НоменклатураДляПоискаСерийногоНомера = Неопределено;
			Форма.ФильтрПоискаПоШтрихкоду.Свойство("СерииНоменклатуры", НоменклатураДляПоискаСерийногоНомера);
			Запрос.УстановитьПараметр("НоменклатураДляПоискаСерийногоНомера", НоменклатураДляПоискаСерийногоНомера);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСоШтрихкодамиПереопределяемый.СтруктураФильтрПоискаПоУмолчанию.
Функция ФильтрПоискаПоУмолчанию() Экспорт
	
	ФильтрПоискаПоШтрихкоду = Новый Структура;
	ФильтрПоискаПоШтрихкоду.Вставить("Номенклатура");
	ФильтрПоискаПоШтрихкоду.Вставить("Справки2ЕГАИС");
	ФильтрПоискаПоШтрихкоду.Вставить("ИнформационныеКарты");
	ФильтрПоискаПоШтрихкоду.Вставить("СерийныеНомера");
	ФильтрПоискаПоШтрихкоду.Вставить("СерииНоменклатуры");
	
	Возврат ФильтрПоискаПоШтрихкоду;
	
КонецФункции

// См. РаботаСоШтрихкодамиПереопределяемый.ОпределитьФильтрПоискаШтрихкода.
Процедура ОпределитьФильтрПоискаШтрихкода(Форма) Экспорт
	
	Если Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокумента" Тогда
	//При пустом фильтре осуществляется полный поиск
	ИначеЕсли Форма.ИмяФормы = "Документ.ПеремещениеТоваров.Форма.ФормаДокумента" Тогда
		ФильтрПоискаПоШтрихкоду = Новый Структура;
		ФильтрПоискаПоШтрихкоду.Вставить("Номенклатура");
		ФильтрПоискаПоШтрихкоду.Вставить("Справки2ЕГАИС");
		ФильтрПоискаПоШтрихкоду.Вставить("СерийныеНомера");
		ФильтрПоискаПоШтрихкоду.Вставить("СерииНоменклатуры");
		Форма.ФильтрПоискаПоШтрихкоду = ФильтрПоискаПоШтрихкоду;
	ИначеЕсли Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаСписка" Тогда
		ФильтрПоискаПоШтрихкоду = Новый Структура;
		ФильтрПоискаПоШтрихкоду.Вставить("Номенклатура");
		Форма.ФильтрПоискаПоШтрихкоду = ФильтрПоискаПоШтрихкоду;
	ИначеЕсли Форма.ИмяФормы = "Обработка.РабочееМестоКассира.Форма.ФормаРМК" Тогда
		ФильтрПоискаПоШтрихкоду = ФильтрПоискаПоУмолчанию();
		ФильтрПоискаПоШтрихкоду.Вставить("РегистрацияНовойКарты");
	КонецЕсли;
	
КонецПроцедуры

// Настраивает форму анализа штрихкодов.
//
// Параметры:
//  Форма - УправляемаяФорма - форма анализа штрихкодов.
//
Процедура НастроитьФормуАнализаШтрихкодов(Форма) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти
