////////////////////////////////////////////////////////////////////////////////
// ФинансыКлиент содержит процедуры и функции для работы 
// с финансами и обработки действий пользователя с финансами.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Пересчитывает сумму в шапке документа, если она отличается от сумм в табличной части.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Текущий документ.
//  Формы - УправляемаяФорма - форма родитель.
//  Отказ - Булево - признак отказа от проведения операции.
//  ПараметрыЗаписи - Структура - структура параметров записи.
//
Процедура ПересчетСуммыДокументаПоРасшифровкеПлатежа(Объект, Форма, Отказ, ПараметрыЗаписи) Экспорт
	
	Если Объект.РасшифровкаПлатежа.Количество() > 0
		И Объект.СуммаДокумента <> Объект.РасшифровкаПлатежа.Итог("Сумма") Тогда
		
		Отказ = Истина;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Объект", Объект);
		ДополнительныеПараметры.Вставить("Форма", Форма);
		ДополнительныеПараметры.Вставить("ПараметрыЗаписи", ПараметрыЗаписи);
		
		ТекстВопроса = НСтр("ru = 'Сумма по строкам в табличной части не равна сумме документа, пересчитать сумму документа?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеПересчетСуммыДокумента", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

// Оповещение процедуры ПересчетСуммыДокументаПоРасшифровкеПлатежа.
//
// Параметры:
//  КодОтвета - КодВозвратаДиалога - ответ на диалог.
//  ДополнительныеПараметры - Структура - структура дополнительных параметров выполнения операции.
//
Процедура ОповещениеПересчетСуммыДокумента(КодОтвета, ДополнительныеПараметры) Экспорт
	
	Объект = ДополнительныеПараметры.Объект;
	ПараметрыЗаписи = ДополнительныеПараметры.ПараметрыЗаписи;
	Форма = ДополнительныеПараметры.Форма;
	
	Если КодОтвета = КодВозвратаДиалога.Да Тогда
		Объект.СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("Сумма");
	КонецЕсли;
	
	Форма.Модифицированность = Ложь;
	Форма.Записать(ПараметрыЗаписи);
	
КонецПроцедуры

// Пересчитывает сумму в строке табличной части "Расшифровка платежа" при изменении суммы в шапке документа.
//
// Параметры:
//	Объект - ДанныеФормыСтруктура - Текущий документ.
//	СуммаДокумента - Число - Сумма документа.
//
Процедура ПересчетСуммыВСтрокеРасшифровкиПлатежа(Объект, СуммаДокумента) Экспорт
	
	Если Объект.РасшифровкаПлатежа.Количество() = 1 Тогда
		
		СтрокаТаблицы = Объект.РасшифровкаПлатежа[0];
		СтрокаТаблицы.Сумма = СуммаДокумента;
		
	КонецЕсли;
	
КонецПроцедуры // ПересчетСуммыВСтрокеРасшифровкиПлатежа()

// Проверяет возможность печати чека на фискальном регистраторе.
//
// Параметры:
//	ФормаОбъекта - УправляемаяФорма - Форма документа.
//
// Возвращаемое значение:
//	Булево - Признак возможности печати.
//
Функция ПроверитьВозможностьПечатиЧека(ОбработчикОповещения, ФормаОбъекта) Экспорт
	
	ПечататьЧек = Истина;
	
	// Если объект не проведен или модифицирован - выполним проведение.
	Если НЕ (ФормаОбъекта.Объект.Проведен
		И ЗначениеЗаполнено(ФормаОбъекта.Объект.Ссылка))
		ИЛИ ФормаОбъекта.Модифицированность Тогда
		
		ТекстВопроса = НСтр("ru='Операция возможна только после проведения документа, провести документ?'");
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		ПечататьЧек = Ложь;
		
	КонецЕсли;
	
	Возврат ПечататьЧек;

КонецФункции // ПроверитьВозможностьПечатиЧека()

#КонецОбласти
