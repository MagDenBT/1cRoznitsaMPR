
#Область СлужебныйПрограммныйИнтерфейс

#Область Прочее

// Обработчик специфических сценариев записи объекта в форме (например, после дополнительных ответов пользователя)
//   При переопределении действия:
//     ** Вызвать обработчик ДействиеПослеЗаписи после окончания записи
//     ** Установить признак СтандартнаяОбработка в значение Ложь
//
// Параметры:
//   Форма                - УправляемаяФорма     - источник события записи
//   Объект               - ДанныеФормыСтруктура - записываемый из формы объект
//   ДействиеПослеЗаписи  - ОписаниеОповещения   - действие которое требуется выполнить после записи объекта из формы
//   СтандартнаяОбработка - Булево               - признак стандартной обработки события (запись без блокирующих вызовов)
//
Процедура ВыполнитьЗаписьОбъектаВФорме(Форма, Объект, ДействиеПослеЗаписи, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	Если Объект.Проведен Тогда
		ОбщегоНазначенияРТКлиент.Провести(Форма, Истина, ДействиеПослеЗаписи);
	Иначе
		ОбщегоНазначенияРТКлиент.Записать(Форма, Истина, ДействиеПослеЗаписи);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Открывает форму списка номенклатуры.
//
Процедура ОткрытьФормуСпискаНоменклатуры(ВладелецФормы) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаСписка",, ВладелецФормы);
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаВидыНоменклатуры(ВладелецФормы) Экспорт
	
	ОткрытьФорму("Справочник.ВидыНоменклатуры.ФормаСписка",, ВладелецФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура - Открыть форму считывания акцизной марки
//
// Параметры:
//  Результат - Булево - Не используется
//  ДополнительныеПараметры - Структура - Параметры открытия формы считывания марки: (Форма, ИдентификаторСтроки, Редактирование, АдресВоВременномХранилище)
//
Процедура ОткрытьФормуСчитыванияАкцизнойМарки(Результат, ДополнительныеПараметры) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДополнительныеПараметры.Форма, "Объект") Тогда
		Источник = ДополнительныеПараметры.Форма.Объект;
	Иначе
		Источник = ДополнительныеПараметры.Форма;
	КонецЕсли;
	
	ТекущиеДанные = Источник.Товары.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
	
	Если Не ТекущиеДанные.МаркируемаяПродукция Тогда
		ПоказатьПредупреждение(
			Неопределено,
			НСтр("ru = 'Для данной строки не указываются акцизные марки'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Номенклатура"  , ТекущиеДанные.Номенклатура);
	ПараметрыОткрытияФормы.Вставить("Характеристика", ТекущиеДанные.Характеристика);
	
	Если ТекущиеДанные.МаркируемаяПродукция Тогда
		ОткрытьФорму(
			"Обработка.РаботаСАкцизнымиМаркамиЕГАИС.Форма.ФормаВводаАкцизнойМарки",
			ПараметрыОткрытияФормы,
			ДополнительныеПараметры.Форма,,,,
			Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ДополнительныеПараметры.Форма, ДополнительныеПараметры));
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьВыборФормыСканирования(Выбор, ДополнительныеПараметры) Экспорт
	
	Если Выбор <> Неопределено Тогда
		
		Форма = ДополнительныеПараметры.Форма;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ПараметрыУказанияСерий") Тогда
			ПараметрыУказанияСерий = Форма.ПараметрыУказанияСерий;
		Иначе
			ПараметрыУказанияСерий = Неопределено;
		КонецЕсли;
		
		ВыбранныйВидПродукции = Выбор.Значение;
		Если ВыбранныйВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Алкогольная") Тогда
			ПроверкаИПодборПродукцииЕГАИСКлиент.ОткрытьФормуСканированияАлкогольнойПродукции(Форма);
		Иначе
			ПроверкаИПодборПродукцииИСМПКлиент.ОткрытьФормуПроверкиИПодбора(Форма, ВыбранныйВидПродукции, ПараметрыУказанияСерий);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьОткрытьФормуСчитыванияАкцизнойМарки(Форма, ДополнительныеПараметры) Экспорт
	
	Если Форма.ИспользоватьАкцизныеМарки 
		И НужноОткрытьФормуУказанияАкцизныхМарокПослеОбработкиШтрихкодов(Форма.ДанныеДляОбработки) Тогда
		
		ДополнительныеПараметры.СтандартнаяОбработка = Ложь;
		
		ПараметрыОповещения = ШтрихкодированиеИСКлиент.ПараметрыСканирования(Форма);
		ПараметрыОповещения.ИдентификаторСтроки = Форма.ДанныеДляОбработки.МассивСтрокСАкцизнымиМарками[0];
		ПараметрыОповещения.Вставить("Форма", Форма);
		
		Результат = Неопределено;
		ОткрытьФормуСчитыванияАкцизнойМарки(Результат, ПараметрыОповещения);
		
	КонецЕсли;

КонецПроцедуры

// Определяет необходимость открытия формы указания акцизных марок после обработки штрихкодов.
// Форму нужно открывать, если был отсканирован один штрихкод маркируемой алкогольной продукции.
//
// Параметры:
//  ПараметрыОбработкиШтрихкодов - Структура - см. ШтрихкодированиеНоменклатурыКлиент.ПараметрыОбработкиШтрихкодов().
//
// Возвращаемое значение:
//  Булево - Истина, если нужно открыть форму.
//
Функция НужноОткрытьФормуУказанияАкцизныхМарокПослеОбработкиШтрихкодов(ПараметрыОбработкиШтрихкодов) Экспорт
	
	ОдинШтрихкод = Ложь;
	
	Если ТипЗнч(ПараметрыОбработкиШтрихкодов.Штрихкоды) = Тип("Массив") Тогда
		ОдинШтрихкод = ПараметрыОбработкиШтрихкодов.Штрихкоды.Количество() = 1;
	Иначе
		ОдинШтрихкод = Истина;
	КонецЕсли;
	
	Если ОдинШтрихкод
		И ПараметрыОбработкиШтрихкодов.МассивСтрокСАкцизнымиМарками.Количество() = 1 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Процедура ФормаНастройкиПараметровИСМПЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияИСРТКлиентСервер.ЗаполнитьДанныеНастройкиПараметровНоменклатурыИСМП(ДополнительныеПараметры.Форма, Истина);
	
КонецПроцедуры

#КонецОбласти