
Процедура НоменклатураПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	Ошибки = Неопределено;
		
	ЕстьПолныеПрава = Пользователи.РолиДоступны("ПолныеПрава");
		
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено И Не ЕстьПолныеПрава Тогда
		ТекстОшибки = НСтр("ru = 'Создание/изменение номенклатуры доступно только в центральной базе.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "", ТекстОшибки);
	КонецЕсли;
		
	КодДо = СокрЛП(Источник.Код);
	Если СтрДлина(КодДо) = 7 И Сред(КодДо, 4, 1) = "-" И Не ЕстьПолныеПрава Тогда 
		ТекстОшибки = НСтр("ru = 'Создание номенклатуры с кодом формата XXX-XXX запрещено.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "", ТекстОшибки);
	КонецЕсли;
	
	Если Не ПустаяСтрока(Источник.ds_УИД) И Не ЕстьПолныеПрава Тогда 
		ТекстОшибки = НСтр("ru = 'Редактирование номенклатуры ГЦ запрещено.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "", ТекстОшибки);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ЭтоНовый() И ПустаяСтрока(Источник.ds_GUID) И ПустаяСтрока(Источник.ds_УИД) Тогда
		GUID = Новый УникальныйИдентификатор;
		Источник.УстановитьСсылкуНового(Справочники.Номенклатура.ПолучитьСсылку(GUID));
		Источник.ds_GUID = Строка(GUID);
	КонецЕсли;
	
	Если ПустаяСтрока(Источник.ds_GUID) Тогда 
		Источник.ds_GUID = Строка(Источник.Ссылка.УникальныйИдентификатор());
	КонецЕсли;		
	
КонецПроцедуры

Процедура НСИПередЗаписью(Источник, Отказ) Экспорт

	Если Не Пользователи.РолиДоступны("ПолныеПрава") Тогда
		ОбщегоНазначения.СообщитьПользователю("Нарушение прав доступа!",,,, Отказ);	
	КонецЕсли;	

КонецПроцедуры

Процедура КонтрагентыПередЗаписью(Источник, Отказ) Экспорт

	Если Источник.Ссылка = Константы.КонтрагентРозничныйПокупатель.Получить() 
		И Не Пользователи.РолиДоступны("ПолныеПрава") Тогда
		ОбщегоНазначения.СообщитьПользователю("Нарушение прав доступа!",,,, Отказ);	
	КонецЕсли;	

КонецПроцедуры

Процедура НоменклатураПриКопировании(Источник, ОбъектКопирования) Экспорт

	Источник.ds_УИД = "";
	Источник.ds_GUID = "";

КонецПроцедуры

Процедура ОприходованиеТоваровОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт

	Если ПланыОбмена.ds_ОбменСОфисом.ЭтотУзел().ЭтоГлавныйУзел Тогда
		Возврат;
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОприходованиеТоваров.Ссылка КАК Ссылка,
	|	ОприходованиеТоваров.Дата КАК Дата,
	|	ОприходованиеТоваров.Магазин КАК Магазин,
	|	ОприходованиеТоваров.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|ГДЕ
	|	ОприходованиеТоваров.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
	ВыборкаШапка = Запрос.Выполнить().Выбрать();
	ВыборкаШапка.Следующий();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Цена КАК Цена
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьНоменклатуры.СрезПоследних(
	|				&Дата,
	|				Магазин = &Магазин
	|					И Номенклатура В (&Номенклатура)) КАК СебестоимостьНоменклатурыСрезПоследних
	|		ПО Товары.Номенклатура = СебестоимостьНоменклатурыСрезПоследних.Номенклатура
	|ГДЕ
	|	СебестоимостьНоменклатурыСрезПоследних.Номенклатура ЕСТЬ NULL
	|	И Товары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ВыборкаШапка.Ссылка);
	Запрос.УстановитьПараметр("Номенклатура", Источник.Товары.Выгрузить(, "Номенклатура").ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("Магазин", ВыборкаШапка.Магазин);
	Запрос.УстановитьПараметр("Дата", НачалоДня(ВыборкаШапка.Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда 
		Док = Документы.УстановкаСебестоимости.СоздатьДокумент();
		Док.Дата = НачалоДня(ВыборкаШапка.Дата);
		Док.ДокументОснование = ВыборкаШапка.Ссылка;
		Док.Магазин = ВыборкаШапка.Магазин;
		Док.Ответственный = ВыборкаШапка.Ответственный;
		
		ТЗ = РезультатЗапроса.Выгрузить();
		Для Каждого Стр Из ТЗ Цикл 
			НовСтр = Док.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		КонецЦикла;	
		
		Док.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПоступлениеТоваровОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт

	Если ПланыОбмена.ds_ОбменСОфисом.ЭтотУзел().ЭтоГлавныйУзел Тогда
		Возврат;
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ds_КатегорииНоменклатурыПланСрезПоследних.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.ds_КатегорииНоменклатурыПлан.СрезПоследних(
	|			&Дата,
	|			Магазин = &Магазин
	|				И Номенклатура В (&Номенклатура)) КАК ds_КатегорииНоменклатурыПланСрезПоследних
	|ГДЕ
	|	(ds_КатегорииНоменклатурыПланСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ ds_КатегорииНоменклатурыПланСрезПоследних.ДатаОкончания >= &Дата)
	|	И ds_КатегорииНоменклатурыПланСрезПоследних.КатегорияНоменклатуры.ВидКатегории.СнимаетсяПоступлением";
	Запрос.УстановитьПараметр("Номенклатура", Источник.Товары.Выгрузить(, "Номенклатура").ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("Магазин", Источник.Магазин);
	Запрос.УстановитьПараметр("Дата", НачалоДня(Источник.Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда 
		ТаблицаПоУцененнымТоварам = РезультатЗапроса.Выгрузить();
		
		НаборЗаписей = РегистрыСведений.ds_КатегорииНоменклатурыПлан.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.Регистратор.Установить(Источник.Ссылка);
		НаборЗаписей.Прочитать();
		
		Категория = Справочники.ds_КатегорииНоменклатуры.ПустаяСсылка();
		
		Для Каждого Стр Из ТаблицаПоУцененнымТоварам Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Регистратор = Источник.Ссылка;
			НоваяЗапись.Период = НачалоДня(Источник.Дата);
			НоваяЗапись.Магазин = Источник.Магазин;
			НоваяЗапись.КатегорияНоменклатуры = Категория;
			НоваяЗапись.Номенклатура = Стр.Номенклатура;
			НоваяЗапись.Цена = 0;
			НоваяЗапись.ДатаОкончания = Дата(1, 1, 1);
		КонецЦикла;
		
		НаборЗаписей.Записать();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ШтрихкодыПередЗаписью(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	Ошибки = Неопределено;
		
	ЕстьПолныеПрава = Пользователи.РолиДоступны("ПолныеПрава");
		
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено И Не ЕстьПолныеПрава 
		И ТипЗнч(Источник.Отбор.Владелец.Значение) = Тип("СправочникСсылка.Номенклатура") Тогда
		ТекстОшибки = НСтр("ru = 'Создание/изменение штрихкодов номенклатуры доступно только в центральной базе.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "", ТекстОшибки);
	КонецЕсли;
		
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);

КонецПроцедуры
