
Процедура ОбменСОфисомРегистрацияДокументаПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт

	ЗарегистрироватьИзменения(Источник);
	
КонецПроцедуры

Процедура ОбменСОфисомРегистрацияРегистраПередЗаписью(Источник, Отказ, Замещение) Экспорт

	ЗарегистрироватьИзменения(Источник);		
	
КонецПроцедуры

Процедура ОбменСОфисомРегистрацияСправочникаПередЗаписью(Источник, Отказ) Экспорт

	ЗарегистрироватьИзменения(Источник);		
	
КонецПроцедуры

Процедура ЗарегистрироватьИзменения(Источник)
	
	Если Не ПараметрыСеанса.ds_ОбменСОфисом Тогда
		Возврат;
	КонецЕсли;	
	
	МассивУзловДляРегистрации = ОпределитьМассивУзловДляРегистрацииПроизвольногоТипа(Источник);
	
	ЗаполнитьПолучателейДляОбмена(Источник, МассивУзловДляРегистрации);
	
КонецПроцедуры

Функция ОпределитьМассивУзловДляРегистрацииПроизвольногоТипа(Источник) Экспорт
	
	МассивУзловДляРегистрации = Новый Массив;
	
	ТипИсточника = ТипЗнч(Источник);
	ЭтоГлавныйУзел = ПланыОбмена.ds_ОбменСОфисом.ЭтотУзел().ЭтоГлавныйУзел;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ЭтотУзел", ПланыОбмена.ds_ОбменСОфисом.ЭтотУзел());	
	
	Если ТипИсточника = Тип("СправочникОбъект.Номенклатура") Тогда
		УИДПустой = ПустаяСтрока(Источник.ds_УИД);
		
		Если ЭтоГлавныйУзел Тогда
			Если Не УИДПустой Тогда  
				ТекстЗапроса = 
				"ВЫБРАТЬ
				|	Обмен.Ссылка КАК Узел
				|ИЗ
				|	ПланОбмена.ds_ОбменСОфисом КАК Обмен
				|		ЛЕВОЕ СОЕДИНЕНИЕ ПланОбмена.ds_ОбменСОфисом.Получатели КАК ПолучателиОбмена
				|		ПО Обмен.Ссылка = ПолучателиОбмена.УзелОбмена
				|ГДЕ
				|	ПолучателиОбмена.УзелОбмена ЕСТЬ NULL
				|	И НЕ Обмен.Ссылка = &ЭтотУзел
				|	И НЕ Обмен.ЭтоГлавныйУзел";
			Иначе
				Возврат МассивУзловДляРегистрации;
			КонецЕсли;
		Иначе
			//Если УИДПустой Тогда  
			//	ТекстЗапроса = 
			//	"ВЫБРАТЬ
			//	|	Обмен.Ссылка КАК Узел
			//	|ИЗ
			//	|	ПланОбмена.ds_ОбменСОфисом КАК Обмен
			//	|ГДЕ
			//	|	Обмен.ЭтоГлавныйУзел";
			//Иначе
				Возврат МассивУзловДляРегистрации;
			//КонецЕсли;	
		КонецЕсли;
	ИначеЕсли ТипИсточника = Тип("РегистрСведенийНаборЗаписей.Штрихкоды") Тогда
			Если ЭтоГлавныйУзел Тогда
				ТекстЗапроса = 
				"ВЫБРАТЬ
				|	Обмен.Ссылка КАК Узел
				|ИЗ
				|	ПланОбмена.ds_ОбменСОфисом КАК Обмен
				|		ЛЕВОЕ СОЕДИНЕНИЕ ПланОбмена.ds_ОбменСОфисом.Получатели КАК ПолучателиОбмена
				|		ПО Обмен.Ссылка = ПолучателиОбмена.УзелОбмена
				|ГДЕ
				|	ПолучателиОбмена.УзелОбмена ЕСТЬ NULL
				|	И НЕ Обмен.Ссылка = &ЭтотУзел
				|	И НЕ Обмен.ЭтоГлавныйУзел";
			Иначе
				Возврат МассивУзловДляРегистрации;
			КонецЕсли;
	ИначеЕсли ТипИсточника = Тип("РегистрСведенийНаборЗаписей.ПользовательскиеНастройкиДоступаКОбработкам") Тогда
			Если ЭтоГлавныйУзел И Строка(Источник.Отбор.Пользователь.Значение) = "ds" Тогда
				ТекстЗапроса = 
				"ВЫБРАТЬ
				|	Обмен.Ссылка КАК Узел
				|ИЗ
				|	ПланОбмена.ds_ОбменСОфисом КАК Обмен
				|		ЛЕВОЕ СОЕДИНЕНИЕ ПланОбмена.ds_ОбменСОфисом.Получатели КАК ПолучателиОбмена
				|		ПО Обмен.Ссылка = ПолучателиОбмена.УзелОбмена
				|ГДЕ
				|	ПолучателиОбмена.УзелОбмена ЕСТЬ NULL
				|	И НЕ Обмен.Ссылка = &ЭтотУзел
				|	И НЕ Обмен.ЭтоГлавныйУзел";
			Иначе
				Возврат МассивУзловДляРегистрации;
			КонецЕсли;
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект.ДополнительныеОтчетыИОбработки") Тогда
		Если Источник.ds_НеВыгружатьВМагазины Тогда
			Возврат МассивУзловДляРегистрации;
		КонецЕсли;	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Обмен.Ссылка КАК Узел
		|ИЗ
		|	ПланОбмена.ds_ОбменСОфисом КАК Обмен
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланОбмена.ds_ОбменСОфисом.Получатели КАК ПолучателиОбмена
		|		ПО Обмен.Ссылка = ПолучателиОбмена.УзелОбмена
		|ГДЕ
		|	ПолучателиОбмена.УзелОбмена ЕСТЬ NULL
		|	И НЕ Обмен.Ссылка = &ЭтотУзел
		|	И НЕ Обмен.ЭтоГлавныйУзел";
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект.ds_КатегорииНоменклатуры") Или
		ТипИсточника = Тип("СправочникОбъект.ds_ВидыКатегорийНоменклатуры") Или
		ТипИсточника = Тип("СправочникОбъект.ВариантыОтчетов") Или
		ТипИсточника = Тип("СправочникОбъект.СкидкиНаценки") Или
		ТипИсточника = Тип("СправочникОбъект.НастройкиРМК") Или
		ТипИсточника = Тип("СправочникОбъект.ds_ДенежныеЗнаки") Или
		ТипИсточника = Тип("СправочникОбъект.ПрофилиГруппДоступа") Или
		ТипИсточника = Тип("РегистрСведенийНаборЗаписей.НастройкиВариантовОтчетов") Или
		ТипИсточника = Тип("РегистрСведенийНаборЗаписей.СостоянияОднократныхСкидокИКупонов") Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Обмен.Ссылка КАК Узел
		|ИЗ
		|	ПланОбмена.ds_ОбменСОфисом КАК Обмен
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланОбмена.ds_ОбменСОфисом.Получатели КАК ПолучателиОбмена
		|		ПО Обмен.Ссылка = ПолучателиОбмена.УзелОбмена
		|ГДЕ
		|	ПолучателиОбмена.УзелОбмена ЕСТЬ NULL
		|	И НЕ Обмен.Ссылка = &ЭтотУзел
		|	И НЕ Обмен.ЭтоГлавныйУзел";
	ИначеЕсли ТипИсточника = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Или
		ТипИсточника = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Или
		ТипИсточника = Тип("ДокументОбъект.ОприходованиеТоваров") Или
		ТипИсточника = Тип("ДокументОбъект.ОтчетОРозничныхПродажах") Или
		ТипИсточника = Тип("ДокументОбъект.ПоступлениеТоваров") Или
		ТипИсточника = Тип("ДокументОбъект.РеализацияТоваров") Или
		ТипИсточника = Тип("ДокументОбъект.СписаниеТоваров") Или 
		ТипИсточника = Тип("ДокументОбъект.ПриходныйОрдерНаТовары") Или 
		ТипИсточника = Тип("ДокументОбъект.РасходныйОрдерНаТовары") Или 
		ТипИсточника = Тип("ДокументОбъект.ЧекККМ") Или 
		ТипИсточника = Тип("ДокументОбъект.УстановкаСебестоимости") Или
		ТипИсточника = Тип("ДокументОбъект.ПересортицаТоваров") Или
		ТипИсточника = Тип("ДокументОбъект.СборкаТоваров") Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Обмен.Ссылка КАК Узел
		|ИЗ
		|	ПланОбмена.ds_ОбменСОфисом.Магазины КАК ds_ОбменСОфисомМагазины
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ds_ОбменСОфисом КАК Обмен
		|		ПО ds_ОбменСОфисомМагазины.Ссылка = Обмен.Ссылка
		|ГДЕ
		|	НЕ Обмен.Ссылка = &ЭтотУзел
		|	И Обмен.ЭтоГлавныйУзел
		|	И ds_ОбменСОфисомМагазины.Магазин = &Магазин";
		Запрос.УстановитьПараметр("Магазин", Источник.Магазин);
	ИначеЕсли ТипИсточника = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Обмен.Ссылка КАК Узел
		|ИЗ
		|	ПланОбмена.ds_ОбменСОфисом.Магазины КАК ds_ОбменСОфисомМагазины
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ds_ОбменСОфисом КАК Обмен
		|		ПО ds_ОбменСОфисомМагазины.Ссылка = Обмен.Ссылка
		|ГДЕ
		|	НЕ Обмен.Ссылка = &ЭтотУзел
		|	И Обмен.ЭтоГлавныйУзел
		|	И ds_ОбменСОфисомМагазины.Магазин = &Магазин";
		Запрос.УстановитьПараметр("Магазин", Источник.МагазинОтправитель);		
	ИначеЕсли ТипИсточника = Тип("ДокументОбъект.УстановкаЦенНоменклатуры") Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Обмен.Ссылка КАК Узел
		|ИЗ
		|	ПланОбмена.ds_ОбменСОфисом.Магазины КАК ds_ОбменСОфисомМагазины
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ds_ОбменСОфисом КАК Обмен
		|		ПО ds_ОбменСОфисомМагазины.Ссылка = Обмен.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования КАК ПравилаЦенообразования
		|		ПО ds_ОбменСОфисомМагазины.Магазин.ПравилоЦенообразования = ПравилаЦенообразования.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УстановкаЦенНоменклатуры.ВидыЦен КАК УстановкаЦенНоменклатурыВидыЦен
		|		ПО (ПравилаЦенообразования.ВидЦен = УстановкаЦенНоменклатурыВидыЦен.ВидЦены)
		|ГДЕ
		|	НЕ Обмен.Ссылка = &ЭтотУзел
		|	И Обмен.ЭтоГлавныйУзел
		|	И УстановкаЦенНоменклатурыВидыЦен.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивУзловДляРегистрации.Добавить(Выборка.Узел);
	КонецЦикла;
	
	Возврат МассивУзловДляРегистрации;
	
КонецФункции

Процедура ЗаполнитьПолучателейДляОбмена(Источник, МассивУзловДляРегистрации)
	
	Для Каждого Элемент Из МассивУзловДляРегистрации Цикл
		Источник.ОбменДанными.Получатели.Добавить(Элемент);
	КонецЦикла;
	
КонецПроцедуры

Процедура ds_ОбменСОфисом() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СсылкаНаОбъект = Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию("ExchangeMPR", Истина);
	ИмяОбработки = ВнешниеОбработки.Подключить(ПолучитьНавигационнуюСсылку(СсылкаНаОбъект, "ХранилищеОбработки"),, Ложь, ОбщегоНазначения.ОписаниеЗащитыБезПредупреждений());
	Обработка = ВнешниеОбработки.Создать(ИмяОбработки);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Обмен.Ссылка КАК Узел,
	|	Обмен.ЭтоГлавныйУзел КАК ЭтоГлавныйУзел,
	|	Обмен.ОбщееСообщение КАК ОбщееСообщение,
	|	Обмен.Получатели.(
	|		УзелОбмена.Код КАК Код
	|	) КАК Получатели
	|ИЗ
	|	ПланОбмена.ds_ОбменСОфисом КАК Обмен
	|ГДЕ
	|	НЕ Обмен.Ссылка = &ЭтотУзел
	|	И НЕ Обмен.НеОтправлятьСообщения";
	Запрос.УстановитьПараметр("ЭтотУзел", ПланыОбмена.ds_ОбменСОфисом.ЭтотУзел());	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		Выгрузить(Выборка, Обработка);
	КонецЦикла;	
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура Выгрузить(Выборка, Обработка)
		
	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Выборка.Узел, Выборка.Узел.НомерОтправленного + 1);
	
	Отказ = Истина;
	Если Выборка.ЭтоГлавныйУзел Тогда 
		Данные = Обработка.ВыгрузитьИзмененияДляЦБ(Выборка.Узел, ВыборкаИзменений, Отказ);
	Иначе 
		Данные = Обработка.ВыгрузитьИзмененияДляМагазина(Выборка.Узел, ВыборкаИзменений, Отказ);
	КонецЕсли;	
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;	
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ЗаписьJSON, Данные, , "ФункцияПреобразованияЗаписи");
	
	УзелОбъект = Выборка.Узел.ПолучитьОбъект();
	УзелОбъект.НомерОтправленного = УзелОбъект.НомерОтправленного + 1;
	УзелОбъект.Записать();

	ПотокВПамяти = Новый ПотокВПамяти;
	Запись = Новый ЗаписьДанных(ПотокВПамяти, КодировкаТекста.UTF8,,"","");
	Запись.ЗаписатьСтроку(ЗаписьJSON.Закрыть(), КодировкаТекста.UTF8);
	Запись.Закрыть();
	
	ДвоичныеДанные = ПотокВПамяти.ЗакрытьИПолучитьДвоичныеДанные();
	Поток = ДвоичныеДанные.ОткрытьПотокДляЧтения();
	
	Если Выборка.ЭтоГлавныйУзел Тогда 
		Сообщение = СервисыИнтеграции.ds_СервисМагазина.СоздатьСообщение();
	Иначе
		Сообщение = СервисыИнтеграции.ds_СервисОфиса.СоздатьСообщение();
	КонецЕсли;	
	
	Тело = Сообщение.ПолучитьТелоКакПоток();  
	Поток.КопироватьВ(Тело);  
	Тело.СброситьБуферы();  
	Тело.Закрыть(); 
	Поток.Закрыть(); 
	
	Сообщение.КодОтправителя = ПланыОбмена.ds_ОбменСОфисом.ЭтотУзел().Код;
	Если Выборка.ОбщееСообщение Тогда
		КодПолучателя = "";
		Получатели = Выборка.Получатели.Выгрузить();
		Для Каждого Стр Из Получатели Цикл
			КодПолучателя = КодПолучателя + Стр.Код + ",";	
		КонецЦикла;
		Сообщение.КодПолучателя = Сред(КодПолучателя, 1, СтрДлина(КодПолучателя) - 1);
	Иначе	
		Сообщение.КодПолучателя = УзелОбъект.Код;
	КонецЕсли;	
	Сообщение.Параметры.Вставить("ТипСообщения", "Обмен");
	
	Если Выборка.ЭтоГлавныйУзел Тогда 
		СервисыИнтеграции.ds_СервисМагазина.СетьМагазинов_ИзМагазина.ОтправитьСообщение(Сообщение);
	Иначе
		СервисыИнтеграции.ds_СервисОфиса.СетьМагазинов_ИзОфиса.ОтправитьСообщение(Сообщение);
	КонецЕсли;
	
	//Если УзелОбъект.УдалятьРегистрациюИзмененийПослеОтправки Тогда
		ПланыОбмена.УдалитьРегистрациюИзменений(Выборка.Узел, УзелОбъект.НомерОтправленного);
	//КонецЕсли;	
		
КонецПроцедуры

Процедура ds_СверкаДанныхСОфисом() Экспорт
	
	ЭтотУзел = ПланыОбмена.ds_ОбменСОфисом.ЭтотУзел();
	
	Если Не ЭтотУзел.ЭтоГлавныйУзел Тогда
		Возврат;
	КонецЕсли;	
	
	СсылкаНаОбъект = Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию("ExchangeMPR", Истина);
	ИмяОбработки = ВнешниеОбработки.Подключить(ПолучитьНавигационнуюСсылку(СсылкаНаОбъект, "ХранилищеОбработки"),, Ложь, ОбщегоНазначения.ОписаниеЗащитыБезПредупреждений());
	Обработка = ВнешниеОбработки.Создать(ИмяОбработки);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Обмен.Код,
	|	Обмен.Ссылка КАК Узел,
	|	Обмен.Магазины.(
	|		Магазин)
	|ИЗ
	|	ПланОбмена.ds_ОбменСОфисом КАК Обмен
	|ГДЕ
	|	НЕ Обмен.Ссылка = &ЭтотУзел
	|	И Обмен.СверятьОстатки
	|	И НЕ Обмен.ОбщееСообщение
	|	И Обмен.ДатаАктивнойСверки = ДАТАВРЕМЯ(1, 1, 1)";
	Запрос.УстановитьПараметр("ЭтотУзел", ЭтотУзел);	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		Обработка.ОтправитьСообщение1ИзОфисаВМагазин(Выборка);
	КонецЦикла;	
		
КонецПроцедуры

Функция ФункцияПреобразованияЗаписи(Свойство, Значение, ДополнительныеПараметры, Отказ) Экспорт

	Если Значение = Null Тогда
		Возврат "";
	КонецЕсли;
	
	Отказ = Истина;

КонецФункции
