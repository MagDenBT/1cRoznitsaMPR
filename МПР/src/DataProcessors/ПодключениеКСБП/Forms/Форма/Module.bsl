///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	Элементы.ДекорацияСостояние.Заголовок   = НСтр("ru = 'Получение списка участников СБП, пожалуйста, подождите...'");
	
	ТорговаяТочкаКопирование = Неопределено;
	ДанныеКопирования = Неопределено;
	ДополнительныеПараметры = Неопределено;
	
	Параметры.Свойство("ТорговаяТочка", ТорговаяТочкаКопирование);
	Параметры.Свойство("ДополнительныеПараметры", ДополнительныеПараметры);
	
	Если ТорговаяТочкаКопирование <> Неопределено Тогда
		ДанныеКопирования = Справочники.НастройкиИнтеграцииСПлатежнымиСистемами.ДанныеКопирования(
			ТорговаяТочкаКопирование);
	КонецЕсли;
	
	ЕстьНастройкиПодключения
		= Справочники.НастройкиИнтеграцииСПлатежнымиСистемами.ЕстьНастройкиПодключения();
	ЗаполненыДанныеАутентификации
		= ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	
	Если Параметры.Свойство("БИК") Тогда
		ПлатежнаяСистема = ИнтеграцияСПлатежнымиСистемамиСлужебный.ИнтегрированныйУчастникСБППоБИК(
			Параметры.БИК);
	ИначеЕсли ДанныеКопирования <> Неопределено И ДанныеКопирования.Свойство("ПлатежнаяСистема") Тогда
		ПлатежнаяСистема = ДанныеКопирования.ПлатежнаяСистема
	КонецЕсли;
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.ДобавитьНастройкиОплаты(
		ЭтотОбъект,
		Элементы.ГруппаПрикладныеНастройки,
		ТорговаяТочкаКопирование);
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.НастроитьЭлементыФормыИнтеграции(
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.НастроитьПараметрыПодключения(
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	Если ЗначениеЗаполнено(ТорговаяТочкаКопирование) Тогда
		ЗаполнитьЗначенияСвойств(
			ЭтотОбъект,
			ДанныеКопирования);
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьУчастниковСБП();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияОписаниеОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:sbpDescription" Тогда
		СтандартнаяОбработка = Ложь;
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(
			"https://v8.1c.ru/sbp/");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПользовательскоеСоглашениеОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:userAgreement" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму(
			"Обработка.ПодключениеКСБП.Форма.ПользовательскоеСоглашение",
			,
			ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОписаниеРезультатаОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:log" Тогда
		СтандартнаяОбработка = Ложь;
		ИнтеграцияСПлатежнымиСистемамиКлиент.ОткрытьЖурналРегистрации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСверкаВзаиморасчетовОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИнтеграцияСПлатежнымиСистемамиКлиент.ОткрытьИнформациюОСверкеВзаиморасчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПодсказкаНастройкиОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:instrurtions" Тогда
		СтандартнаяОбработка = Ложь;
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(
			"https://v8.1c.ru/tekhnologii/obmen-dannymi-i-integratsiya/realizovannye-resheniya/sistema-bystrykh-platezhey/");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПоясненияПодключенияАвторизацияОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "action:openPortal" Тогда
		СтандартнаяОбработка = Ложь;
		ИнтернетПоддержкаПользователейКлиент.ОткрытьВебСтраницу(
			ИнтернетПоддержкаПользователейКлиентСервер.URLСтраницыСервисаLogin(
				,
				ИнтернетПоддержкаПользователейКлиент.НастройкиСоединенияССерверами()));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииНастройкиОплаты(Элемент)
	
	ПриИзмененииНастройкиОплатыНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	Отказ = Ложь;
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОбщаяИнформация Тогда
		
		Если Не ЗаполненыДанныеАутентификации Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу;
		ИначеЕсли ЗначениеЗаполнено(ПлатежнаяСистема) Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиУчастникаСБП;
		Иначе
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу Тогда
		
		Результат = ИнтернетПоддержкаПользователейКлиентСервер.ПроверитьДанныеАутентификации(
			Новый Структура("Логин, Пароль",
			ЛогинИПП, ПарольИПП));
		
		Если Результат.Отказ Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				Результат.СообщениеОбОшибке,
				,
				Результат.Поле);
			Возврат;
		КонецЕсли;
		
		ПроверитьПодключениеКПорталу1СИТС(
			ЛогинИПП,
			ПарольИПП,
			Отказ);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ЛогинИПП = "";
		ПарольИПП = "";
		
		Если ЗначениеЗаполнено(ПлатежнаяСистема) Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиУчастникаСБП;
		Иначе
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника Тогда
		
		СтрокаУчастникСБП = УчастникиСБП.НайтиПоИдентификатору(
			Элементы.УчастникиСБП.ТекущаяСтрока);
		Если СтрокаУчастникСБП = Неопределено Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не выбран банк для подключения к Системе быстрых платежей.'"),
				,
				,
				"УчастникиСБП");
			Возврат;
		КонецЕсли;
		
		ПлатежнаяСистема = СтрокаУчастникСБП.Банк;
		
		ДобавитьНастройкиПодключения(
			СтрокаУчастникСБП.АдресЛичногоКабинета,
			СтрокаУчастникСБП.ТекстПредупреждения);
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиУчастникаСБП Тогда
		
		ПроверитьПараметрыПодключения(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПрикладныеНастройки Тогда
		
		Если Не ЗначениеЗаполнено(Наименование) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не заполнено поле ""Наименование"".'"),
				,
				,
				"Наименование");
			Возврат;
		КонецЕсли;
		
		НоваяТорговаяТочка();
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат Тогда
		ЭтотОбъект.Закрыть(Истина);
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиУчастникаСБП Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПрикладныеНастройки Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиУчастникаСБП;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПрикладныеНастройки;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПолучитьУчастниковСБП()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	РезультатВыполнения = ПолучитьУчастниковСБПЗапускЗадания(
		ЭтотОбъект.УникальныйИдентификатор);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПолучитьУчастниковСБПЗапускЗаданияЗавершение",
		ЭтотОбъект);
		
	Если РезультатВыполнения.Статус = "Выполнено" Или РезультатВыполнения.Статус = "Ошибка" Тогда
		ПолучитьУчастниковСБПЗапускЗаданияЗавершение(
			РезультатВыполнения,
			Неопределено);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьУчастниковСБПЗапускЗадания(УникальныйИдентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение актуального списка участников СБП.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"СервисИнтеграцииССБП.ПолучитьУчастниковСБП",
		Неопределено,
		ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьУчастниковСБПЗапускЗаданияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			УстановитьОтображениеИнформацииОбОшибке(
				РезультатОперации.СообщениеОбОшибке,
				Ложь,
				Ложь);
		Иначе
			
			Для Каждого КлючЗначение Из РезультатОперации.ДанныеУчастников Цикл
				НовыйУчастник = УчастникиСБП.Добавить();
				НовыйУчастник.Банк = КлючЗначение.Ключ;
				НовыйУчастник.АдресЛичногоКабинета = КлючЗначение.Значение.АдресСтраницыПодключения;
				НовыйУчастник.ТекстПредупреждения = КлючЗначение.Значение.ТекстПредупреждения;
				НовыйУчастник.БИК.ЗагрузитьЗначения(КлючЗначение.Значение.БИК);
			КонецЦикла;
			
			УчастникиСБП.Сортировать("Банк");
			
			Если ЗначениеЗаполнено(ПлатежнаяСистема) Тогда
				НастройкиБанка = РезультатОперации.ДанныеУчастников.Получить(
					ПлатежнаяСистема);
				Если НастройкиБанка <> Неопределено Тогда
					ДобавитьНастройкиПодключения(
						НастройкиБанка.АдресСтраницыПодключения,
						НастройкиБанка.ТекстПредупреждения);
				Иначе
					ПлатежнаяСистема = Неопределено;
				КонецЕсли;
			КонецЕсли;
			
			Если Не ЕстьНастройкиПодключения Тогда
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОбщаяИнформация;
			ИначеЕсли Не ЗаполненыДанныеАутентификации Тогда
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу;
			ИначеЕсли ЗначениеЗаполнено(ПлатежнаяСистема) Тогда
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиУчастникаСБП;
			Иначе
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
			КонецЕсли;
			
			ДанныеУчастниковЗагружены = Истина;
			
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ИнформацияОбОшибке = Результат.КраткоеПредставлениеОшибки;
		УстановитьОтображениеИнформацииОбОшибке(ИнформацияОбОшибке);
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьПодключениеКПорталу1СИТС(Логин, Пароль, Отказ)
	
	РезультатПроверки = ИнтернетПоддержкаПользователей.ПроверитьЛогинИПароль(
		Логин,
		Пароль);
	
	Если РезультатПроверки.Результат Тогда
		
		ДанныеАутентификации = Новый Структура;
		ДанныеАутентификации.Вставить("Логин", Логин);
		ДанныеАутентификации.Вставить("Пароль", Пароль);
		
		УстановитьПривилегированныйРежим(Истина);
		ИнтернетПоддержкаПользователей.СохранитьДанныеАутентификации(
			ДанныеАутентификации);
		УстановитьПривилегированныйРежим(Ложь);
	Иначе
		ОбщегоНазначения.СообщитьПользователю(
			РезультатПроверки.СообщениеОбОшибке,
			,
			,
			,
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПараметрыПодключения(Отказ)
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	РезультатВыполнения = ПроверитьПараметрыПодключенияЗапускЗадания(
		Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПроверитьПараметрыПодключенияЗавершение",
		ЭтотОбъект);
		
	Если РезультатВыполнения.Статус = "Выполнено" Или РезультатВыполнения.Статус = "Ошибка" Тогда
		ПроверитьПараметрыПодключенияЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	Элементы.ДекорацияСостояние.Заголовок   = НСтр("ru = 'Проверка параметров подключения к Системе быстрых платежей.'");
	
	УстановитьВидимостьДоступность();
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПараметрыПодключенияЗапускЗадания(Отказ)
	
	Если Не ПользовательскоеСоглашение Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Необходимо принять пользовательское соглашение.'"),
			,
			"ПользовательскоеСоглашение",
			,
			Отказ);
	КонецЕсли;
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.ПроверитьНастройкиАутентификации(
		ЭтотОбъект,
		Отказ);
	
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыАутентификации = ИнтеграцияСПлатежнымиСистемамиСлужебный.НастройкиАутентификацииПоДаннымФормы(
		ЭтотОбъект);
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ПараметрыАутентификации", ПараметрыАутентификации);
	ПараметрыПроцедуры.Вставить("ПлатежнаяСистема",        ПлатежнаяСистема);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(
		ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания
		= НСтр("ru = 'Проверка параметров подключения к Системе быстрых платежей.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"СервисИнтеграцииССБП.ПроверитьПараметрыПодключения",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьПараметрыПодключенияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиУчастникаСБП;
			ПоказатьПредупреждение(
				Неопределено,
				РезультатОперации.СообщениеОбОшибке);
		Иначе
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПрикладныеНастройки;
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиУчастникаСБП;
		ИнформацияОбОшибке = Результат.КраткоеПредставлениеОшибки;
		ПоказатьПредупреждение(
			Неопределено,
			ИнформацияОбОшибке);
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНастройкиПодключения(АдресЛичногоКабинета, ТекстПредупреждения)
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.УдалитьНастройкиАутентификации(
		ЭтотОбъект);
	
	ПараметрыПодсказки = ИнтеграцияСПлатежнымиСистемамиСлужебный.НовыйПараметрПодсказки();
	ПараметрыПодсказки.ОтобразитьПодсказку  = Истина;
	ПараметрыПодсказки.АдресЛичногоКабинета = АдресЛичногоКабинета;
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.ДобавитьНастройкиАутентификации(
		ЭтотОбъект,
		Элементы.ГруппаНастройкиПодключения,
		Неопределено,
		ПлатежнаяСистема,
		ПараметрыПодсказки);
	
	Элементы.ГруппаСверкаВзаиморасчетов.Видимость = ИнтеграцияСПлатежнымиСистемамиСлужебный.ПоддерживаетсяСверкаВзаиморасчетов(
		ПлатежнаяСистема);
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиУчастникаСБП;
	Элементы.ДекорацияПредупреждение.Заголовок = ТекстПредупреждения;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииНастройкиОплатыНаСервере()
	
	ИнтеграцияСПлатежнымиСистемамиСлужебный.НастроитьЭлементыФормыИнтеграции(
		ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура НоваяТорговаяТочка()
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Наименование", Наименование);
	ПараметрыЗаполнения.Вставить("СверкаВзаиморасчетов", СверкаВзаиморасчетов);
	
	ПараметрыАутентификации = ИнтеграцияСПлатежнымиСистемамиСлужебный.НастройкиАутентификацииПоДаннымФормы(
		ЭтотОбъект);
	
	ПараметрыОплаты = ИнтеграцияСПлатежнымиСистемамиСлужебный.НастройкиОплатыПоДаннымФормы(
		ЭтотОбъект);
	
	Результат = Справочники.НастройкиИнтеграцииСПлатежнымиСистемами.НоваяТорговаяТочка(
		ПараметрыЗаполнения,
		ПараметрыАутентификации,
		ПараметрыОплаты,
		ПлатежнаяСистема);
	
	Если Результат.Ошибка Тогда
		УстановитьОтображениеИнформацииОбОшибке(
			Результат.СообщениеОбОшибке,
			Истина);
	Иначе
		УстановитьОтображениеУспешногоЗавершения();
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеИнформацииОбОшибке(
		ИнформацияОбОшибке,
		Ошибка = Истина,
		ОтображатьЖР = Истина)
	
	Если ОтображатьЖР Тогда
		ПредставлениеОшибки = ИнтернетПоддержкаПользователейКлиентСервер.ФорматированнаяСтрокаИзHTML(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1
					|
					|
					|Подробную информацию см. в <a href = ""open:log"">Журнале регистрации</a>.'"),
				ИнформацияОбОшибке));
		
	Иначе
		ПредставлениеОшибки = ИнформацияОбОшибке;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница        = Элементы.ГруппаРезультат;
	Элементы.ДекорацияОписаниеРезультата.Заголовок = ПредставлениеОшибки;
	Элементы.ДекорацияКартинкаРезультат.Картинка   = ?(Ошибка,
		БиблиотекаКартинок.Ошибка32,
		БиблиотекаКартинок.Предупреждение32);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеУспешногоЗавершения()
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат;
	Элементы.ДекорацияКартинкаРезультат.Картинка = БиблиотекаКартинок.Успешно32;
	ПодключениеЗавершено = Истина;
	Элементы.ДекорацияОписаниеРезультата.Заголовок = НСтр("ru = 'Настройка подключения создана.'");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОбщаяИнформация
		Или Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу
		Или Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника Тогда
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Истина;
	ИначеЕсли  Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиУчастникаСБП
		Или Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПрикладныеНастройки Тогда
		Элементы.Назад.Видимость = Истина;
		Элементы.Далее.Видимость = Истина;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация Тогда
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Ложь;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат Тогда
		Если ПодключениеЗавершено Тогда
			Элементы.Назад.Видимость  = Ложь;
			Элементы.Отмена.Видимость = Ложь;
			Элементы.Далее.Видимость  = Истина;
			Элементы.Далее.Заголовок  = НСтр("ru = 'OK'");
		ИначеЕсли Не ДанныеУчастниковЗагружены Тогда
			Элементы.Назад.Видимость  = Ложь;
			Элементы.Отмена.Видимость = Истина;
			Элементы.Далее.Видимость  = Ложь;
		Иначе
			Элементы.Назад.Видимость  = Истина;
			Элементы.Отмена.Видимость = Истина;
			Элементы.Далее.Видимость  = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Элементы.ДекорацияПредупреждение.Заголовок) Тогда
		Элементы.ГруппаПредупреждение.Видимость = Ложь;
	Иначе
		Элементы.ГруппаПредупреждение.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
