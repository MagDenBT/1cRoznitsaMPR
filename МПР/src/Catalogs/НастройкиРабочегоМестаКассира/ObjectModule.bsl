
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если РабочееМесто.Пустая() Тогда
		
		ТекущееРабочееМесто = ПараметрыСеанса.РабочееМестоКлиента;
		
		Если НЕ ЗначениеЗаполнено(ТекущееРабочееМесто) Тогда
			ТекущееРабочееМесто = МенеджерОборудованияВызовСервера.РабочееМестоКлиента();
		КонецЕсли; 
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	НастройкиРабочегоМестаКассира.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НастройкиРабочегоМестаКассира КАК НастройкиРабочегоМестаКассира
		|ГДЕ
		|	НЕ НастройкиРабочегоМестаКассира.ПометкаУдаления
		|	И НастройкиРабочегоМестаКассира.РабочееМесто = &ТекущееРабочееМесто
		|	И НЕ НастройкиРабочегоМестаКассира.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка)");
		Запрос.УстановитьПараметр("ТекущееРабочееМесто", ТекущееРабочееМесто);
		
		НастройкиТекущегоРабочегоМеста = Запрос.Выполнить().Выбрать();
		
		Если НастройкиТекущегоРабочегоМеста.Количество() = 0 Тогда 
			РабочееМесто = ТекущееРабочееМесто;
		КонецЕсли;
	
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		ИспользоватьНовыйПодборТоваров = Истина;
	КонецЕсли;
	
	ПроверитьУникальностьКомбинацийГорячихКлавиш(Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЗначениеЗаполнено(ОбъектКопирования.РабочееМесто) Тогда
		РабочееМесто = Справочники.РабочиеМеста.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьУникальностьНабораИзбранныхТоваров(Отказ);
	
	Если ОбщегоНазначенияРМКПереопределяемый.ИспользоватьХарактеристикиНоменклатуры() Тогда
		ПроверитьЗаполнениеХарактеристикБыстрыхТоваров(Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьУникальностьКомбинацийГорячихКлавиш(Отказ)

	Если НЕ Отказ Тогда
		
		КоличествоВведенныхКомбинаций = ГорячиеКлавиши.Количество();
		
		ЗарезервированныеГорячиеКлавишиИзбранного = ГорячиеКлавиши.ВыгрузитьКолонки();
		
		КомбинацияОткрытияПанелиИзбранного = ГорячиеКлавиши.Найти("ОткрытьПанельИзбранныхТоваров", "ИмяКнопки");
		СтроковоеПредставлениеКомбинацииОткрытияПанелиИзбранного = "";
		
		Если НЕ КомбинацияОткрытияПанелиИзбранного = Неопределено Тогда
			
			СоставляющаяCtrl = ?(КомбинацияОткрытияПанелиИзбранного.АкселераторCtrl, "Ctrl +", "");
			СоставляющаяAlt = ?(КомбинацияОткрытияПанелиИзбранного.АкселераторAlt, "Alt +", "");
			СоставляющаяShift = ?(КомбинацияОткрытияПанелиИзбранного.АкселераторShift, "Shift +", "");
			
			СтроковоеПредставлениеКомбинацииОткрытияПанелиИзбранного = СтрШаблон("%1%2%3%4", СоставляющаяCtrl,
				СоставляющаяAlt, СоставляющаяShift);
			
			ПозицияВиртуальнойСтроки = КоличествоВведенныхКомбинаций + 1;
			
			НомерПП = 0;
			
			Пока НомерПП < 10 Цикл
				
				НоваяКомбинация = ЗарезервированныеГорячиеКлавишиИзбранного.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяКомбинация, КомбинацияОткрытияПанелиИзбранного);
				НоваяКомбинация.НомерСтроки = ПозицияВиртуальнойСтроки + НомерПП;
				НоваяКомбинация.ИмяКнопки = СтрШаблон(НСтр("ru = 'ИзбранныйТовар%1'"), НомерПП);
				НоваяКомбинация.ЗаголовокКнопки = СтрШаблон(НСтр("ru = 'ИзбранныйТовар%1'"), НомерПП);
				НоваяКомбинация.Клавиша = СтрШаблон("_%1", НомерПП);
				
				НомерПП = НомерПП + 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Избранное.НомерСтроки КАК НомерСтроки,
		|	Избранное.ИмяКнопки КАК ИмяКнопки,
		|	Избранное.ЗаголовокКнопки КАК ЗаголовокКнопки,
		|	Избранное.Клавиша КАК Клавиша,
		|	Избранное.АкселераторAlt КАК АкселераторAlt,
		|	Избранное.АкселераторCtrl КАК АкселераторCtrl,
		|	Избранное.АкселераторShift КАК АкселераторShift
		|ПОМЕСТИТЬ ЗарезервированныеГорячиеКлавишиИзбранного
		|ИЗ
		|	&Избранное КАК Избранное
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГорячиеКлавиши.НомерСтроки КАК НомерСтроки,
		|	ГорячиеКлавиши.ИмяКнопки КАК ИмяКнопки,
		|	ГорячиеКлавиши.ЗаголовокКнопки КАК ЗаголовокКнопки,
		|	ГорячиеКлавиши.Клавиша КАК Клавиша,
		|	ГорячиеКлавиши.АкселераторAlt КАК АкселераторAlt,
		|	ГорячиеКлавиши.АкселераторCtrl КАК АкселераторCtrl,
		|	ГорячиеКлавиши.АкселераторShift КАК АкселераторShift
		|ПОМЕСТИТЬ РанееОпределенныеГорячиеКлавиши
		|ИЗ
		|	&ГорячиеКлавиши КАК ГорячиеКлавиши
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РанееОпределенныеГорячиеКлавиши.НомерСтроки КАК НомерСтроки,
		|	РанееОпределенныеГорячиеКлавиши.ИмяКнопки КАК ИмяКнопки,
		|	РанееОпределенныеГорячиеКлавиши.ЗаголовокКнопки КАК ЗаголовокКнопки,
		|	РанееОпределенныеГорячиеКлавиши.Клавиша КАК Клавиша,
		|	РанееОпределенныеГорячиеКлавиши.АкселераторAlt КАК АкселераторAlt,
		|	РанееОпределенныеГорячиеКлавиши.АкселераторCtrl КАК АкселераторCtrl,
		|	РанееОпределенныеГорячиеКлавиши.АкселераторShift КАК АкселераторShift
		|ПОМЕСТИТЬ ТаблицаГорячиеКлавиши
		|ИЗ
		|	РанееОпределенныеГорячиеКлавиши КАК РанееОпределенныеГорячиеКлавиши
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗарезервированныеГорячиеКлавишиИзбранного.НомерСтроки,
		|	ЗарезервированныеГорячиеКлавишиИзбранного.ИмяКнопки,
		|	ЗарезервированныеГорячиеКлавишиИзбранного.ЗаголовокКнопки,
		|	ЗарезервированныеГорячиеКлавишиИзбранного.Клавиша,
		|	ЗарезервированныеГорячиеКлавишиИзбранного.АкселераторAlt,
		|	ЗарезервированныеГорячиеКлавишиИзбранного.АкселераторCtrl,
		|	ЗарезервированныеГорячиеКлавишиИзбранного.АкселераторShift
		|ИЗ
		|	ЗарезервированныеГорячиеКлавишиИзбранного КАК ЗарезервированныеГорячиеКлавишиИзбранного
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаГорячиеКлавиши.Клавиша КАК Клавиша,
		|	ТаблицаГорячиеКлавиши.АкселераторAlt КАК АкселераторAlt,
		|	ТаблицаГорячиеКлавиши.АкселераторCtrl КАК АкселераторCtrl,
		|	ТаблицаГорячиеКлавиши.АкселераторShift КАК АкселераторShift,
		|	СУММА(1) КАК КоличествоЗаписей
		|ПОМЕСТИТЬ НаборРазличныхСочетаний
		|ИЗ
		|	ТаблицаГорячиеКлавиши КАК ТаблицаГорячиеКлавиши
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаГорячиеКлавиши.Клавиша,
		|	ТаблицаГорячиеКлавиши.АкселераторAlt,
		|	ТаблицаГорячиеКлавиши.АкселераторCtrl,
		|	ТаблицаГорячиеКлавиши.АкселераторShift
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаГорячиеКлавиши.НомерСтроки КАК НомерСтроки,
		|	ТаблицаГорячиеКлавиши.ИмяКнопки КАК ИмяКнопки,
		|	ТаблицаГорячиеКлавиши.ЗаголовокКнопки КАК ЗаголовокКнопки,
		|	ТаблицаГорячиеКлавиши.Клавиша КАК Клавиша,
		|	ТаблицаГорячиеКлавиши.АкселераторAlt КАК АкселераторAlt,
		|	ТаблицаГорячиеКлавиши.АкселераторCtrl КАК АкселераторCtrl,
		|	ТаблицаГорячиеКлавиши.АкселераторShift КАК АкселераторShift,
		|	ВЫБОР
		|		КОГДА НаборРазличныхСочетаний.КоличествоЗаписей > 1
		|				И НЕ ТаблицаГорячиеКлавиши.Клавиша = ""Нет""
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЗаписьУникальна
		|ИЗ
		|	ТаблицаГорячиеКлавиши КАК ТаблицаГорячиеКлавиши
		|		ЛЕВОЕ СОЕДИНЕНИЕ НаборРазличныхСочетаний КАК НаборРазличныхСочетаний
		|		ПО ТаблицаГорячиеКлавиши.Клавиша = НаборРазличныхСочетаний.Клавиша
		|			И ТаблицаГорячиеКлавиши.АкселераторAlt = НаборРазличныхСочетаний.АкселераторAlt
		|			И ТаблицаГорячиеКлавиши.АкселераторCtrl = НаборРазличныхСочетаний.АкселераторCtrl
		|			И ТаблицаГорячиеКлавиши.АкселераторShift = НаборРазличныхСочетаний.АкселераторShift");
		
		Запрос.УстановитьПараметр("ГорячиеКлавиши", ГорячиеКлавиши.Выгрузить());
		Запрос.УстановитьПараметр("Избранное", ЗарезервированныеГорячиеКлавишиИзбранного);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		СписокПовторяющихсяСтрок = "";
		
		Пока Выборка.Следующий() Цикл
			
			Если Не Выборка.ЗаписьУникальна Тогда 
				
				// зарезервированные комбинации клавиш для избранного
				Если Выборка.НомерСтроки > КоличествоВведенныхКомбинаций Тогда
					Продолжить;
				КонецЕсли;
				
				СписокПовторяющихсяСтрок = СтрШаблон("%1%2,", СписокПовторяющихсяСтрок, Выборка.НомерСтроки);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ ПустаяСтрока(СписокПовторяющихсяСтрок) Тогда
			
			ДополнениеТекстаСообщения = "";
			
			Если НЕ ПустаяСтрока(СтроковоеПредставлениеКомбинацииОткрытияПанелиИзбранного) Тогда 
				
				ДополнениеТекстаСообщения = СтрШаблон(
					НСтр("ru = '%1Для избранных товаров зарезервированы комбинации клавиш ""%2"" [0-9] цифрового ряда.'"),
					Символы.ПС, СтроковоеПредставлениеКомбинацииОткрытияПанелиИзбранного);
					
			КонецЕсли;
		
			СписокПовторяющихсяСтрок = Лев(СписокПовторяющихсяСтрок, СтрДлина(СписокПовторяющихсяСтрок) - 1);
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В стр. %1 неуникальные сочетания горячих клавиш.%2'"),
				СписокПовторяющихсяСтрок, ДополнениеТекстаСообщения);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьУникальностьНабораИзбранныхТоваров(Отказ)

	Если НЕ Отказ Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = ОбщегоНазначенияРМКПереопределяемый.ТекстЗапросаУникальностьИзбранныхТоваров();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		НомераСтрок = "";
		
		Пока Выборка.Следующий() Цикл
			НомераСтрок = СтрШаблон(НСтр("ru = '%1%2,'"), НомераСтрок, Выборка.НомерСтроки);
		КонецЦикла;
		
		Если НЕ ПустаяСтрока(НомераСтрок) Тогда
			
			НомераСтрок = Лев(НомераСтрок, СтрДлина(НомераСтрок) - 1);
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В строках %1 содержатся дубли комбинаций товар - характеристика.
				|Пожалуйста, удалите дубли.'"), НомераСтрок);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
			
		КонецЕсли;
		
		Если НЕ Отказ И БыстрыеТовары.Количество() > 10 Тогда
			
			ТекстСообщения = НСтр("ru ='Программа поддерживает не более 10 товарных позиций в разделе ""Избранное"".
				|Пожалуйста, удалите лишние позиции.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Проверяет заполненность характеристик у товаров, в виде которых указан признак использования характеристик
//
// Параметры:
//  Отказ - Булево - признак отказа
//
Процедура ПроверитьЗаполнениеХарактеристикБыстрыхТоваров(Отказ)
	
	Если НЕ Отказ Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = ОбщегоНазначенияРМКПереопределяемый.ТекстЗапросаЗаполнениеХарактеристик();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		НомераСтрок = "";
		
		Пока Выборка.Следующий() Цикл
			НомераСтрок = СтрШаблон(НСтр("ru = '%1%2,'"), НомераСтрок, Выборка.НомерСтроки);
		КонецЦикла;
		
		Если НЕ ПустаяСтрока(НомераСтрок) Тогда
			
			НомераСтрок = Лев(НомераСтрок, СтрДлина(НомераСтрок) - 1);
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В строках %1 не заполнены характеристики.
				|Пожалуйста, заполните их.'"), НомераСтрок);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли